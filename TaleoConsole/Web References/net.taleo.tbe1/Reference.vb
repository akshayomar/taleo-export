'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
'
Namespace net.taleo.tbe1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="rpcrouterSoapBinding", [Namespace]:="urn:TBEWebAPI"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(WebServicesException)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityBean))>  _
    Partial Public Class IWebAPIService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private createTaskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createReferenceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private loginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private logoutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEnabledServicesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLoginTokenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAccountByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBackgroundChecksByCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBackgroundCheckByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createBackgroundCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateBackgroundCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteBackgroundCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEventByEntityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPublicEventsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEventByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCandidateByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getRequisitionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOffersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private setBinaryResumeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBinaryResumeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private removeCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getContactByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCandidateHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getRequisitionHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAccountHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getContactHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUserHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getInterviewsByCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getInterviewByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createInterviewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateInterviewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteInterviewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOfferByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createOfferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateOfferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private setBinaryOfferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBinaryOfferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteOfferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getReferencesByCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getReferenceByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateReferenceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteReferenceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchRequisitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getRequisitionByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCandidatesByRequisitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAssociatedUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createRequisitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateRequisitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private setAssociatedUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private removeAssociatedUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteRequisitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTaskByEntityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTaskByUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTaskByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateTaskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteTaskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUserByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createUserWithPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getContactLogsByEntityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getContactLogByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createContactLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createEmailLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createEmailSentLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateContactLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteContactLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSystemPropsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCandReqStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private parseResumeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private parseResumeIntoCandidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMetadataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLookupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private removeLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createEntityAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAttachmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEntityAttachmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAttachmentDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCandidateDetailsByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createRequisitionTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private postRequisitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private unpostRequisitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private upsertCandidateToRequisitionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteEmployeeByNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private upsertEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEmployeeByNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEmployeeByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private updateEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCandidateWorkHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getRollingEntitiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private upsertRollingEntityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteRollingEntityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.TaleoConsole.My.MySettings.Default.TaleoConsole_net_taleo_tbe1_IWebAPIService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event createTaskCompleted As createTaskCompletedEventHandler
        
        '''<remarks/>
        Public Event createReferenceCompleted As createReferenceCompletedEventHandler
        
        '''<remarks/>
        Public Event createEventCompleted As createEventCompletedEventHandler
        
        '''<remarks/>
        Public Event loginCompleted As loginCompletedEventHandler
        
        '''<remarks/>
        Public Event logoutCompleted As logoutCompletedEventHandler
        
        '''<remarks/>
        Public Event getEnabledServicesCompleted As getEnabledServicesCompletedEventHandler
        
        '''<remarks/>
        Public Event getLoginTokenCompleted As getLoginTokenCompletedEventHandler
        
        '''<remarks/>
        Public Event searchAccountCompleted As searchAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event getAccountByIdCompleted As getAccountByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createAccountCompleted As createAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event updateAccountCompleted As updateAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteAccountCompleted As deleteAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event getBackgroundChecksByCandidateCompleted As getBackgroundChecksByCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event getBackgroundCheckByIdCompleted As getBackgroundCheckByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createBackgroundCheckCompleted As createBackgroundCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event updateBackgroundCheckCompleted As updateBackgroundCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteBackgroundCheckCompleted As deleteBackgroundCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event getEventByEntityCompleted As getEventByEntityCompletedEventHandler
        
        '''<remarks/>
        Public Event getPublicEventsCompleted As getPublicEventsCompletedEventHandler
        
        '''<remarks/>
        Public Event getEventByIdCompleted As getEventByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event updateEventCompleted As updateEventCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteEventCompleted As deleteEventCompletedEventHandler
        
        '''<remarks/>
        Public Event searchCandidateCompleted As searchCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event getCandidateByIdCompleted As getCandidateByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event getRequisitionsCompleted As getRequisitionsCompletedEventHandler
        
        '''<remarks/>
        Public Event getOffersCompleted As getOffersCompletedEventHandler
        
        '''<remarks/>
        Public Event createCandidateCompleted As createCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event updateCandidateCompleted As updateCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event setBinaryResumeCompleted As setBinaryResumeCompletedEventHandler
        
        '''<remarks/>
        Public Event getBinaryResumeCompleted As getBinaryResumeCompletedEventHandler
        
        '''<remarks/>
        Public Event submitCandidateCompleted As submitCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event removeCandidateCompleted As removeCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteCandidateCompleted As deleteCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event searchContactCompleted As searchContactCompletedEventHandler
        
        '''<remarks/>
        Public Event getContactByIdCompleted As getContactByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createContactCompleted As createContactCompletedEventHandler
        
        '''<remarks/>
        Public Event updateContactCompleted As updateContactCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteContactCompleted As deleteContactCompletedEventHandler
        
        '''<remarks/>
        Public Event getCandidateHistoryCompleted As getCandidateHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event getRequisitionHistoryCompleted As getRequisitionHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event getAccountHistoryCompleted As getAccountHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event getContactHistoryCompleted As getContactHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event getUserHistoryCompleted As getUserHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event getInterviewsByCandidateCompleted As getInterviewsByCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event getInterviewByIdCompleted As getInterviewByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createInterviewCompleted As createInterviewCompletedEventHandler
        
        '''<remarks/>
        Public Event updateInterviewCompleted As updateInterviewCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteInterviewCompleted As deleteInterviewCompletedEventHandler
        
        '''<remarks/>
        Public Event getOfferByIdCompleted As getOfferByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createOfferCompleted As createOfferCompletedEventHandler
        
        '''<remarks/>
        Public Event updateOfferCompleted As updateOfferCompletedEventHandler
        
        '''<remarks/>
        Public Event setBinaryOfferCompleted As setBinaryOfferCompletedEventHandler
        
        '''<remarks/>
        Public Event getBinaryOfferCompleted As getBinaryOfferCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteOfferCompleted As deleteOfferCompletedEventHandler
        
        '''<remarks/>
        Public Event getReferencesByCandidateCompleted As getReferencesByCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event getReferenceByIdCompleted As getReferenceByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event updateReferenceCompleted As updateReferenceCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteReferenceCompleted As deleteReferenceCompletedEventHandler
        
        '''<remarks/>
        Public Event searchRequisitionCompleted As searchRequisitionCompletedEventHandler
        
        '''<remarks/>
        Public Event getRequisitionByIdCompleted As getRequisitionByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event getCandidatesByRequisitionCompleted As getCandidatesByRequisitionCompletedEventHandler
        
        '''<remarks/>
        Public Event getAssociatedUsersCompleted As getAssociatedUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event createRequisitionCompleted As createRequisitionCompletedEventHandler
        
        '''<remarks/>
        Public Event updateRequisitionCompleted As updateRequisitionCompletedEventHandler
        
        '''<remarks/>
        Public Event setAssociatedUserCompleted As setAssociatedUserCompletedEventHandler
        
        '''<remarks/>
        Public Event removeAssociatedUserCompleted As removeAssociatedUserCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteRequisitionCompleted As deleteRequisitionCompletedEventHandler
        
        '''<remarks/>
        Public Event getTaskByEntityCompleted As getTaskByEntityCompletedEventHandler
        
        '''<remarks/>
        Public Event getTaskByUserCompleted As getTaskByUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getTaskByIdCompleted As getTaskByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event updateTaskCompleted As updateTaskCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteTaskCompleted As deleteTaskCompletedEventHandler
        
        '''<remarks/>
        Public Event searchUserCompleted As searchUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getUserByIdCompleted As getUserByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createUserCompleted As createUserCompletedEventHandler
        
        '''<remarks/>
        Public Event createUserWithPermissionsCompleted As createUserWithPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event updateUserCompleted As updateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteUserCompleted As deleteUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getContactLogsByEntityCompleted As getContactLogsByEntityCompletedEventHandler
        
        '''<remarks/>
        Public Event getContactLogByIdCompleted As getContactLogByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createContactLogCompleted As createContactLogCompletedEventHandler
        
        '''<remarks/>
        Public Event createEmailLogCompleted As createEmailLogCompletedEventHandler
        
        '''<remarks/>
        Public Event createEmailSentLogCompleted As createEmailSentLogCompletedEventHandler
        
        '''<remarks/>
        Public Event updateContactLogCompleted As updateContactLogCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteContactLogCompleted As deleteContactLogCompletedEventHandler
        
        '''<remarks/>
        Public Event getSystemPropsCompleted As getSystemPropsCompletedEventHandler
        
        '''<remarks/>
        Public Event getCandReqStatusCompleted As getCandReqStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event parseResumeCompleted As parseResumeCompletedEventHandler
        
        '''<remarks/>
        Public Event parseResumeIntoCandidateCompleted As parseResumeIntoCandidateCompletedEventHandler
        
        '''<remarks/>
        Public Event getMetadataCompleted As getMetadataCompletedEventHandler
        
        '''<remarks/>
        Public Event getLookupCompleted As getLookupCompletedEventHandler
        
        '''<remarks/>
        Public Event createLinkCompleted As createLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event removeLinkCompleted As removeLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event createAttachmentCompleted As createAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event createEntityAttachmentCompleted As createEntityAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event updateAttachmentCompleted As updateAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteAttachmentCompleted As deleteAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event getAttachmentsCompleted As getAttachmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event getEntityAttachmentsCompleted As getEntityAttachmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAttachmentCompleted As getAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event getAttachmentDataCompleted As getAttachmentDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getCandidateDetailsByIdCompleted As getCandidateDetailsByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createRequisitionTemplateCompleted As createRequisitionTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event postRequisitionCompleted As postRequisitionCompletedEventHandler
        
        '''<remarks/>
        Public Event unpostRequisitionCompleted As unpostRequisitionCompletedEventHandler
        
        '''<remarks/>
        Public Event upsertCandidateToRequisitionsCompleted As upsertCandidateToRequisitionsCompletedEventHandler
        
        '''<remarks/>
        Public Event searchEmployeeCompleted As searchEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteEmployeeCompleted As deleteEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteEmployeeByNumberCompleted As deleteEmployeeByNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event upsertEmployeeCompleted As upsertEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event getEmployeeByNumberCompleted As getEmployeeByNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event getEmployeeByIdCompleted As getEmployeeByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event createEmployeeCompleted As createEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event updateEmployeeCompleted As updateEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event getCandidateWorkHistoryCompleted As getCandidateWorkHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event getRollingEntitiesCompleted As getRollingEntitiesCompletedEventHandler
        
        '''<remarks/>
        Public Event upsertRollingEntityCompleted As upsertRollingEntityCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteRollingEntityCompleted As deleteRollingEntityCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createTask(ByVal in0 As String, ByVal in1 As TaskBean) As <System.Xml.Serialization.XmlElementAttribute("createTaskReturn")> Long
            Dim results() As Object = Me.Invoke("createTask", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createTaskAsync(ByVal in0 As String, ByVal in1 As TaskBean)
            Me.createTaskAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createTaskAsync(ByVal in0 As String, ByVal in1 As TaskBean, ByVal userState As Object)
            If (Me.createTaskOperationCompleted Is Nothing) Then
                Me.createTaskOperationCompleted = AddressOf Me.OncreateTaskOperationCompleted
            End If
            Me.InvokeAsync("createTask", New Object() {in0, in1}, Me.createTaskOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateTaskOperationCompleted(ByVal arg As Object)
            If (Not (Me.createTaskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createTaskCompleted(Me, New createTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createReference(ByVal in0 As String, ByVal in1 As ReferenceBean) As <System.Xml.Serialization.XmlElementAttribute("createReferenceReturn")> Long
            Dim results() As Object = Me.Invoke("createReference", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createReferenceAsync(ByVal in0 As String, ByVal in1 As ReferenceBean)
            Me.createReferenceAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createReferenceAsync(ByVal in0 As String, ByVal in1 As ReferenceBean, ByVal userState As Object)
            If (Me.createReferenceOperationCompleted Is Nothing) Then
                Me.createReferenceOperationCompleted = AddressOf Me.OncreateReferenceOperationCompleted
            End If
            Me.InvokeAsync("createReference", New Object() {in0, in1}, Me.createReferenceOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateReferenceOperationCompleted(ByVal arg As Object)
            If (Not (Me.createReferenceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createReferenceCompleted(Me, New createReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createEvent(ByVal in0 As String, ByVal in1 As CalendarEventBean) As <System.Xml.Serialization.XmlElementAttribute("createEventReturn")> Long
            Dim results() As Object = Me.Invoke("createEvent", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createEventAsync(ByVal in0 As String, ByVal in1 As CalendarEventBean)
            Me.createEventAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createEventAsync(ByVal in0 As String, ByVal in1 As CalendarEventBean, ByVal userState As Object)
            If (Me.createEventOperationCompleted Is Nothing) Then
                Me.createEventOperationCompleted = AddressOf Me.OncreateEventOperationCompleted
            End If
            Me.InvokeAsync("createEvent", New Object() {in0, in1}, Me.createEventOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.createEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createEventCompleted(Me, New createEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function login(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String) As <System.Xml.Serialization.XmlElementAttribute("loginReturn")> String
            Dim results() As Object = Me.Invoke("login", New Object() {in0, in1, in2})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub loginAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String)
            Me.loginAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub loginAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal userState As Object)
            If (Me.loginOperationCompleted Is Nothing) Then
                Me.loginOperationCompleted = AddressOf Me.OnloginOperationCompleted
            End If
            Me.InvokeAsync("login", New Object() {in0, in1, in2}, Me.loginOperationCompleted, userState)
        End Sub
        
        Private Sub OnloginOperationCompleted(ByVal arg As Object)
            If (Not (Me.loginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent loginCompleted(Me, New loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub logout(ByVal in0 As String)
            Me.Invoke("logout", New Object() {in0})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub logoutAsync(ByVal in0 As String)
            Me.logoutAsync(in0, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub logoutAsync(ByVal in0 As String, ByVal userState As Object)
            If (Me.logoutOperationCompleted Is Nothing) Then
                Me.logoutOperationCompleted = AddressOf Me.OnlogoutOperationCompleted
            End If
            Me.InvokeAsync("logout", New Object() {in0}, Me.logoutOperationCompleted, userState)
        End Sub
        
        Private Sub OnlogoutOperationCompleted(ByVal arg As Object)
            If (Not (Me.logoutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent logoutCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getEnabledServices(ByVal in0 As String) As <System.Xml.Serialization.XmlElementAttribute("getEnabledServicesReturn")> String
            Dim results() As Object = Me.Invoke("getEnabledServices", New Object() {in0})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEnabledServicesAsync(ByVal in0 As String)
            Me.getEnabledServicesAsync(in0, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEnabledServicesAsync(ByVal in0 As String, ByVal userState As Object)
            If (Me.getEnabledServicesOperationCompleted Is Nothing) Then
                Me.getEnabledServicesOperationCompleted = AddressOf Me.OngetEnabledServicesOperationCompleted
            End If
            Me.InvokeAsync("getEnabledServices", New Object() {in0}, Me.getEnabledServicesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEnabledServicesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEnabledServicesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEnabledServicesCompleted(Me, New getEnabledServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getLoginToken(ByVal sessionId As String) As <System.Xml.Serialization.XmlElementAttribute("getLoginTokenReturn")> String
            Dim results() As Object = Me.Invoke("getLoginToken", New Object() {sessionId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLoginTokenAsync(ByVal sessionId As String)
            Me.getLoginTokenAsync(sessionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLoginTokenAsync(ByVal sessionId As String, ByVal userState As Object)
            If (Me.getLoginTokenOperationCompleted Is Nothing) Then
                Me.getLoginTokenOperationCompleted = AddressOf Me.OngetLoginTokenOperationCompleted
            End If
            Me.InvokeAsync("getLoginToken", New Object() {sessionId}, Me.getLoginTokenOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLoginTokenOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLoginTokenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLoginTokenCompleted(Me, New getLoginTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function searchAccount(ByVal in0 As String, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal in1() As mapItem) As <System.Xml.Serialization.XmlElementAttribute("searchAccountReturn")> SearchResultArr
            Dim results() As Object = Me.Invoke("searchAccount", New Object() {in0, in1})
            Return CType(results(0),SearchResultArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchAccountAsync(ByVal in0 As String, ByVal in1() As mapItem)
            Me.searchAccountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchAccountAsync(ByVal in0 As String, ByVal in1() As mapItem, ByVal userState As Object)
            If (Me.searchAccountOperationCompleted Is Nothing) Then
                Me.searchAccountOperationCompleted = AddressOf Me.OnsearchAccountOperationCompleted
            End If
            Me.InvokeAsync("searchAccount", New Object() {in0, in1}, Me.searchAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchAccountCompleted(Me, New searchAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getAccountById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getAccountByIdReturn")> AccountBean
            Dim results() As Object = Me.Invoke("getAccountById", New Object() {in0, in1})
            Return CType(results(0),AccountBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAccountByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getAccountByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAccountByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getAccountByIdOperationCompleted Is Nothing) Then
                Me.getAccountByIdOperationCompleted = AddressOf Me.OngetAccountByIdOperationCompleted
            End If
            Me.InvokeAsync("getAccountById", New Object() {in0, in1}, Me.getAccountByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAccountByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAccountByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAccountByIdCompleted(Me, New getAccountByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createAccount(ByVal in0 As String, ByVal in1 As AccountBean) As <System.Xml.Serialization.XmlElementAttribute("createAccountReturn")> Long
            Dim results() As Object = Me.Invoke("createAccount", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createAccountAsync(ByVal in0 As String, ByVal in1 As AccountBean)
            Me.createAccountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createAccountAsync(ByVal in0 As String, ByVal in1 As AccountBean, ByVal userState As Object)
            If (Me.createAccountOperationCompleted Is Nothing) Then
                Me.createAccountOperationCompleted = AddressOf Me.OncreateAccountOperationCompleted
            End If
            Me.InvokeAsync("createAccount", New Object() {in0, in1}, Me.createAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.createAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createAccountCompleted(Me, New createAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateAccount(ByVal in0 As String, ByVal in1 As AccountBean)
            Me.Invoke("updateAccount", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateAccountAsync(ByVal in0 As String, ByVal in1 As AccountBean)
            Me.updateAccountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateAccountAsync(ByVal in0 As String, ByVal in1 As AccountBean, ByVal userState As Object)
            If (Me.updateAccountOperationCompleted Is Nothing) Then
                Me.updateAccountOperationCompleted = AddressOf Me.OnupdateAccountOperationCompleted
            End If
            Me.InvokeAsync("updateAccount", New Object() {in0, in1}, Me.updateAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateAccountCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteAccount(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteAccount", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteAccountAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteAccountAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteAccountAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteAccountOperationCompleted Is Nothing) Then
                Me.deleteAccountOperationCompleted = AddressOf Me.OndeleteAccountOperationCompleted
            End If
            Me.InvokeAsync("deleteAccount", New Object() {in0, in1}, Me.deleteAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteAccountCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getBackgroundChecksByCandidate(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getBackgroundChecksByCandidateReturn")> LongArr
            Dim results() As Object = Me.Invoke("getBackgroundChecksByCandidate", New Object() {in0, in1})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBackgroundChecksByCandidateAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getBackgroundChecksByCandidateAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBackgroundChecksByCandidateAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getBackgroundChecksByCandidateOperationCompleted Is Nothing) Then
                Me.getBackgroundChecksByCandidateOperationCompleted = AddressOf Me.OngetBackgroundChecksByCandidateOperationCompleted
            End If
            Me.InvokeAsync("getBackgroundChecksByCandidate", New Object() {in0, in1}, Me.getBackgroundChecksByCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBackgroundChecksByCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBackgroundChecksByCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBackgroundChecksByCandidateCompleted(Me, New getBackgroundChecksByCandidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getBackgroundCheckById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getBackgroundCheckByIdReturn")> BackgroundCheckBean
            Dim results() As Object = Me.Invoke("getBackgroundCheckById", New Object() {in0, in1})
            Return CType(results(0),BackgroundCheckBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBackgroundCheckByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getBackgroundCheckByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBackgroundCheckByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getBackgroundCheckByIdOperationCompleted Is Nothing) Then
                Me.getBackgroundCheckByIdOperationCompleted = AddressOf Me.OngetBackgroundCheckByIdOperationCompleted
            End If
            Me.InvokeAsync("getBackgroundCheckById", New Object() {in0, in1}, Me.getBackgroundCheckByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBackgroundCheckByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBackgroundCheckByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBackgroundCheckByIdCompleted(Me, New getBackgroundCheckByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createBackgroundCheck(ByVal in0 As String, ByVal in1 As BackgroundCheckBean) As <System.Xml.Serialization.XmlElementAttribute("createBackgroundCheckReturn")> Long
            Dim results() As Object = Me.Invoke("createBackgroundCheck", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createBackgroundCheckAsync(ByVal in0 As String, ByVal in1 As BackgroundCheckBean)
            Me.createBackgroundCheckAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createBackgroundCheckAsync(ByVal in0 As String, ByVal in1 As BackgroundCheckBean, ByVal userState As Object)
            If (Me.createBackgroundCheckOperationCompleted Is Nothing) Then
                Me.createBackgroundCheckOperationCompleted = AddressOf Me.OncreateBackgroundCheckOperationCompleted
            End If
            Me.InvokeAsync("createBackgroundCheck", New Object() {in0, in1}, Me.createBackgroundCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateBackgroundCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.createBackgroundCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createBackgroundCheckCompleted(Me, New createBackgroundCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateBackgroundCheck(ByVal in0 As String, ByVal in1 As BackgroundCheckBean)
            Me.Invoke("updateBackgroundCheck", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateBackgroundCheckAsync(ByVal in0 As String, ByVal in1 As BackgroundCheckBean)
            Me.updateBackgroundCheckAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateBackgroundCheckAsync(ByVal in0 As String, ByVal in1 As BackgroundCheckBean, ByVal userState As Object)
            If (Me.updateBackgroundCheckOperationCompleted Is Nothing) Then
                Me.updateBackgroundCheckOperationCompleted = AddressOf Me.OnupdateBackgroundCheckOperationCompleted
            End If
            Me.InvokeAsync("updateBackgroundCheck", New Object() {in0, in1}, Me.updateBackgroundCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateBackgroundCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateBackgroundCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateBackgroundCheckCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteBackgroundCheck(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteBackgroundCheck", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteBackgroundCheckAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteBackgroundCheckAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteBackgroundCheckAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteBackgroundCheckOperationCompleted Is Nothing) Then
                Me.deleteBackgroundCheckOperationCompleted = AddressOf Me.OndeleteBackgroundCheckOperationCompleted
            End If
            Me.InvokeAsync("deleteBackgroundCheck", New Object() {in0, in1}, Me.deleteBackgroundCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteBackgroundCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteBackgroundCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteBackgroundCheckCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getEventByEntity(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long) As <System.Xml.Serialization.XmlElementAttribute("getEventByEntityReturn")> LongArr
            Dim results() As Object = Me.Invoke("getEventByEntity", New Object() {in0, in1, in2})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEventByEntityAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long)
            Me.getEventByEntityAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEventByEntityAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long, ByVal userState As Object)
            If (Me.getEventByEntityOperationCompleted Is Nothing) Then
                Me.getEventByEntityOperationCompleted = AddressOf Me.OngetEventByEntityOperationCompleted
            End If
            Me.InvokeAsync("getEventByEntity", New Object() {in0, in1, in2}, Me.getEventByEntityOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEventByEntityOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEventByEntityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEventByEntityCompleted(Me, New getEventByEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getPublicEvents(ByVal in0 As String, ByVal in1 As Date, ByVal in2 As Date) As <System.Xml.Serialization.XmlElementAttribute("getPublicEventsReturn")> LongArr
            Dim results() As Object = Me.Invoke("getPublicEvents", New Object() {in0, in1, in2})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPublicEventsAsync(ByVal in0 As String, ByVal in1 As Date, ByVal in2 As Date)
            Me.getPublicEventsAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPublicEventsAsync(ByVal in0 As String, ByVal in1 As Date, ByVal in2 As Date, ByVal userState As Object)
            If (Me.getPublicEventsOperationCompleted Is Nothing) Then
                Me.getPublicEventsOperationCompleted = AddressOf Me.OngetPublicEventsOperationCompleted
            End If
            Me.InvokeAsync("getPublicEvents", New Object() {in0, in1, in2}, Me.getPublicEventsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPublicEventsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPublicEventsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPublicEventsCompleted(Me, New getPublicEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getEventById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getEventByIdReturn")> CalendarEventBean
            Dim results() As Object = Me.Invoke("getEventById", New Object() {in0, in1})
            Return CType(results(0),CalendarEventBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEventByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getEventByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEventByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getEventByIdOperationCompleted Is Nothing) Then
                Me.getEventByIdOperationCompleted = AddressOf Me.OngetEventByIdOperationCompleted
            End If
            Me.InvokeAsync("getEventById", New Object() {in0, in1}, Me.getEventByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEventByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEventByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEventByIdCompleted(Me, New getEventByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateEvent(ByVal in0 As String, ByVal in1 As CalendarEventBean)
            Me.Invoke("updateEvent", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateEventAsync(ByVal in0 As String, ByVal in1 As CalendarEventBean)
            Me.updateEventAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateEventAsync(ByVal in0 As String, ByVal in1 As CalendarEventBean, ByVal userState As Object)
            If (Me.updateEventOperationCompleted Is Nothing) Then
                Me.updateEventOperationCompleted = AddressOf Me.OnupdateEventOperationCompleted
            End If
            Me.InvokeAsync("updateEvent", New Object() {in0, in1}, Me.updateEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateEventCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteEvent(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteEvent", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteEventAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteEventAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteEventAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteEventOperationCompleted Is Nothing) Then
                Me.deleteEventOperationCompleted = AddressOf Me.OndeleteEventOperationCompleted
            End If
            Me.InvokeAsync("deleteEvent", New Object() {in0, in1}, Me.deleteEventOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteEventCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function searchCandidate(ByVal in0 As String, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal in1() As mapItem) As <System.Xml.Serialization.XmlElementAttribute("searchCandidateReturn")> SearchResultArr
            Dim results() As Object = Me.Invoke("searchCandidate", New Object() {in0, in1})
            Return CType(results(0),SearchResultArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchCandidateAsync(ByVal in0 As String, ByVal in1() As mapItem)
            Me.searchCandidateAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchCandidateAsync(ByVal in0 As String, ByVal in1() As mapItem, ByVal userState As Object)
            If (Me.searchCandidateOperationCompleted Is Nothing) Then
                Me.searchCandidateOperationCompleted = AddressOf Me.OnsearchCandidateOperationCompleted
            End If
            Me.InvokeAsync("searchCandidate", New Object() {in0, in1}, Me.searchCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchCandidateCompleted(Me, New searchCandidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getCandidateById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getCandidateByIdReturn")> CandidateBean
            Dim results() As Object = Me.Invoke("getCandidateById", New Object() {in0, in1})
            Return CType(results(0),CandidateBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCandidateByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getCandidateByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCandidateByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getCandidateByIdOperationCompleted Is Nothing) Then
                Me.getCandidateByIdOperationCompleted = AddressOf Me.OngetCandidateByIdOperationCompleted
            End If
            Me.InvokeAsync("getCandidateById", New Object() {in0, in1}, Me.getCandidateByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCandidateByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCandidateByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCandidateByIdCompleted(Me, New getCandidateByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getRequisitions(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getRequisitionsReturn")> LongArr
            Dim results() As Object = Me.Invoke("getRequisitions", New Object() {in0, in1})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getRequisitionsAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getRequisitionsAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getRequisitionsAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getRequisitionsOperationCompleted Is Nothing) Then
                Me.getRequisitionsOperationCompleted = AddressOf Me.OngetRequisitionsOperationCompleted
            End If
            Me.InvokeAsync("getRequisitions", New Object() {in0, in1}, Me.getRequisitionsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetRequisitionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getRequisitionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getRequisitionsCompleted(Me, New getRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getOffers(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getOffersReturn")> LongArr
            Dim results() As Object = Me.Invoke("getOffers", New Object() {in0, in1})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOffersAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getOffersAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOffersAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getOffersOperationCompleted Is Nothing) Then
                Me.getOffersOperationCompleted = AddressOf Me.OngetOffersOperationCompleted
            End If
            Me.InvokeAsync("getOffers", New Object() {in0, in1}, Me.getOffersOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOffersOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOffersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOffersCompleted(Me, New getOffersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createCandidate(ByVal in0 As String, ByVal in1 As CandidateBean) As <System.Xml.Serialization.XmlElementAttribute("createCandidateReturn")> Long
            Dim results() As Object = Me.Invoke("createCandidate", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createCandidateAsync(ByVal in0 As String, ByVal in1 As CandidateBean)
            Me.createCandidateAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createCandidateAsync(ByVal in0 As String, ByVal in1 As CandidateBean, ByVal userState As Object)
            If (Me.createCandidateOperationCompleted Is Nothing) Then
                Me.createCandidateOperationCompleted = AddressOf Me.OncreateCandidateOperationCompleted
            End If
            Me.InvokeAsync("createCandidate", New Object() {in0, in1}, Me.createCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.createCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createCandidateCompleted(Me, New createCandidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateCandidate(ByVal in0 As String, ByVal in1 As CandidateBean)
            Me.Invoke("updateCandidate", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateCandidateAsync(ByVal in0 As String, ByVal in1 As CandidateBean)
            Me.updateCandidateAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateCandidateAsync(ByVal in0 As String, ByVal in1 As CandidateBean, ByVal userState As Object)
            If (Me.updateCandidateOperationCompleted Is Nothing) Then
                Me.updateCandidateOperationCompleted = AddressOf Me.OnupdateCandidateOperationCompleted
            End If
            Me.InvokeAsync("updateCandidate", New Object() {in0, in1}, Me.updateCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateCandidateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub setBinaryResume(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As ByteArr)
            Me.Invoke("setBinaryResume", New Object() {in0, in1, in2, in3})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setBinaryResumeAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As ByteArr)
            Me.setBinaryResumeAsync(in0, in1, in2, in3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setBinaryResumeAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As ByteArr, ByVal userState As Object)
            If (Me.setBinaryResumeOperationCompleted Is Nothing) Then
                Me.setBinaryResumeOperationCompleted = AddressOf Me.OnsetBinaryResumeOperationCompleted
            End If
            Me.InvokeAsync("setBinaryResume", New Object() {in0, in1, in2, in3}, Me.setBinaryResumeOperationCompleted, userState)
        End Sub
        
        Private Sub OnsetBinaryResumeOperationCompleted(ByVal arg As Object)
            If (Not (Me.setBinaryResumeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent setBinaryResumeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getBinaryResume(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getBinaryResumeReturn")> ByteArr
            Dim results() As Object = Me.Invoke("getBinaryResume", New Object() {in0, in1})
            Return CType(results(0),ByteArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBinaryResumeAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getBinaryResumeAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBinaryResumeAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getBinaryResumeOperationCompleted Is Nothing) Then
                Me.getBinaryResumeOperationCompleted = AddressOf Me.OngetBinaryResumeOperationCompleted
            End If
            Me.InvokeAsync("getBinaryResume", New Object() {in0, in1}, Me.getBinaryResumeOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBinaryResumeOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBinaryResumeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBinaryResumeCompleted(Me, New getBinaryResumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub submitCandidate(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As LongArr)
            Me.Invoke("submitCandidate", New Object() {in0, in1, in2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitCandidateAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As LongArr)
            Me.submitCandidateAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitCandidateAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As LongArr, ByVal userState As Object)
            If (Me.submitCandidateOperationCompleted Is Nothing) Then
                Me.submitCandidateOperationCompleted = AddressOf Me.OnsubmitCandidateOperationCompleted
            End If
            Me.InvokeAsync("submitCandidate", New Object() {in0, in1, in2}, Me.submitCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.submitCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitCandidateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub removeCandidate(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Long)
            Me.Invoke("removeCandidate", New Object() {in0, in1, in2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub removeCandidateAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Long)
            Me.removeCandidateAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub removeCandidateAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Long, ByVal userState As Object)
            If (Me.removeCandidateOperationCompleted Is Nothing) Then
                Me.removeCandidateOperationCompleted = AddressOf Me.OnremoveCandidateOperationCompleted
            End If
            Me.InvokeAsync("removeCandidate", New Object() {in0, in1, in2}, Me.removeCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnremoveCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.removeCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent removeCandidateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteCandidate(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteCandidate", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteCandidateAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteCandidateAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteCandidateAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteCandidateOperationCompleted Is Nothing) Then
                Me.deleteCandidateOperationCompleted = AddressOf Me.OndeleteCandidateOperationCompleted
            End If
            Me.InvokeAsync("deleteCandidate", New Object() {in0, in1}, Me.deleteCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteCandidateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function searchContact(ByVal in0 As String, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal in1() As mapItem) As <System.Xml.Serialization.XmlElementAttribute("searchContactReturn")> SearchResultArr
            Dim results() As Object = Me.Invoke("searchContact", New Object() {in0, in1})
            Return CType(results(0),SearchResultArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchContactAsync(ByVal in0 As String, ByVal in1() As mapItem)
            Me.searchContactAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchContactAsync(ByVal in0 As String, ByVal in1() As mapItem, ByVal userState As Object)
            If (Me.searchContactOperationCompleted Is Nothing) Then
                Me.searchContactOperationCompleted = AddressOf Me.OnsearchContactOperationCompleted
            End If
            Me.InvokeAsync("searchContact", New Object() {in0, in1}, Me.searchContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchContactCompleted(Me, New searchContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getContactById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getContactByIdReturn")> ContactBean
            Dim results() As Object = Me.Invoke("getContactById", New Object() {in0, in1})
            Return CType(results(0),ContactBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getContactByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getContactByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getContactByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getContactByIdOperationCompleted Is Nothing) Then
                Me.getContactByIdOperationCompleted = AddressOf Me.OngetContactByIdOperationCompleted
            End If
            Me.InvokeAsync("getContactById", New Object() {in0, in1}, Me.getContactByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetContactByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getContactByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getContactByIdCompleted(Me, New getContactByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createContact(ByVal in0 As String, ByVal in1 As ContactBean) As <System.Xml.Serialization.XmlElementAttribute("createContactReturn")> Long
            Dim results() As Object = Me.Invoke("createContact", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createContactAsync(ByVal in0 As String, ByVal in1 As ContactBean)
            Me.createContactAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createContactAsync(ByVal in0 As String, ByVal in1 As ContactBean, ByVal userState As Object)
            If (Me.createContactOperationCompleted Is Nothing) Then
                Me.createContactOperationCompleted = AddressOf Me.OncreateContactOperationCompleted
            End If
            Me.InvokeAsync("createContact", New Object() {in0, in1}, Me.createContactOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.createContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createContactCompleted(Me, New createContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateContact(ByVal in0 As String, ByVal in1 As ContactBean)
            Me.Invoke("updateContact", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateContactAsync(ByVal in0 As String, ByVal in1 As ContactBean)
            Me.updateContactAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateContactAsync(ByVal in0 As String, ByVal in1 As ContactBean, ByVal userState As Object)
            If (Me.updateContactOperationCompleted Is Nothing) Then
                Me.updateContactOperationCompleted = AddressOf Me.OnupdateContactOperationCompleted
            End If
            Me.InvokeAsync("updateContact", New Object() {in0, in1}, Me.updateContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateContactCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteContact(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteContact", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteContactAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteContactAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteContactAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteContactOperationCompleted Is Nothing) Then
                Me.deleteContactOperationCompleted = AddressOf Me.OndeleteContactOperationCompleted
            End If
            Me.InvokeAsync("deleteContact", New Object() {in0, in1}, Me.deleteContactOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteContactCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getCandidateHistory(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getCandidateHistoryReturn")> HistoryBeanArr
            Dim results() As Object = Me.Invoke("getCandidateHistory", New Object() {in0, in1})
            Return CType(results(0),HistoryBeanArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCandidateHistoryAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getCandidateHistoryAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCandidateHistoryAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getCandidateHistoryOperationCompleted Is Nothing) Then
                Me.getCandidateHistoryOperationCompleted = AddressOf Me.OngetCandidateHistoryOperationCompleted
            End If
            Me.InvokeAsync("getCandidateHistory", New Object() {in0, in1}, Me.getCandidateHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCandidateHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCandidateHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCandidateHistoryCompleted(Me, New getCandidateHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getRequisitionHistory(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getRequisitionHistoryReturn")> HistoryBeanArr
            Dim results() As Object = Me.Invoke("getRequisitionHistory", New Object() {in0, in1})
            Return CType(results(0),HistoryBeanArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getRequisitionHistoryAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getRequisitionHistoryAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getRequisitionHistoryAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getRequisitionHistoryOperationCompleted Is Nothing) Then
                Me.getRequisitionHistoryOperationCompleted = AddressOf Me.OngetRequisitionHistoryOperationCompleted
            End If
            Me.InvokeAsync("getRequisitionHistory", New Object() {in0, in1}, Me.getRequisitionHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetRequisitionHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getRequisitionHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getRequisitionHistoryCompleted(Me, New getRequisitionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getAccountHistory(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getAccountHistoryReturn")> HistoryBeanArr
            Dim results() As Object = Me.Invoke("getAccountHistory", New Object() {in0, in1})
            Return CType(results(0),HistoryBeanArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAccountHistoryAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getAccountHistoryAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAccountHistoryAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getAccountHistoryOperationCompleted Is Nothing) Then
                Me.getAccountHistoryOperationCompleted = AddressOf Me.OngetAccountHistoryOperationCompleted
            End If
            Me.InvokeAsync("getAccountHistory", New Object() {in0, in1}, Me.getAccountHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAccountHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAccountHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAccountHistoryCompleted(Me, New getAccountHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getContactHistory(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getContactHistoryReturn")> HistoryBeanArr
            Dim results() As Object = Me.Invoke("getContactHistory", New Object() {in0, in1})
            Return CType(results(0),HistoryBeanArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getContactHistoryAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getContactHistoryAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getContactHistoryAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getContactHistoryOperationCompleted Is Nothing) Then
                Me.getContactHistoryOperationCompleted = AddressOf Me.OngetContactHistoryOperationCompleted
            End If
            Me.InvokeAsync("getContactHistory", New Object() {in0, in1}, Me.getContactHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetContactHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getContactHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getContactHistoryCompleted(Me, New getContactHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getUserHistory(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getUserHistoryReturn")> HistoryBeanArr
            Dim results() As Object = Me.Invoke("getUserHistory", New Object() {in0, in1})
            Return CType(results(0),HistoryBeanArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUserHistoryAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getUserHistoryAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUserHistoryAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getUserHistoryOperationCompleted Is Nothing) Then
                Me.getUserHistoryOperationCompleted = AddressOf Me.OngetUserHistoryOperationCompleted
            End If
            Me.InvokeAsync("getUserHistory", New Object() {in0, in1}, Me.getUserHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUserHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUserHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUserHistoryCompleted(Me, New getUserHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getInterviewsByCandidate(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getInterviewsByCandidateReturn")> LongArr
            Dim results() As Object = Me.Invoke("getInterviewsByCandidate", New Object() {in0, in1})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInterviewsByCandidateAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getInterviewsByCandidateAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInterviewsByCandidateAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getInterviewsByCandidateOperationCompleted Is Nothing) Then
                Me.getInterviewsByCandidateOperationCompleted = AddressOf Me.OngetInterviewsByCandidateOperationCompleted
            End If
            Me.InvokeAsync("getInterviewsByCandidate", New Object() {in0, in1}, Me.getInterviewsByCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInterviewsByCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInterviewsByCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInterviewsByCandidateCompleted(Me, New getInterviewsByCandidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getInterviewById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getInterviewByIdReturn")> InterviewBean
            Dim results() As Object = Me.Invoke("getInterviewById", New Object() {in0, in1})
            Return CType(results(0),InterviewBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInterviewByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getInterviewByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInterviewByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getInterviewByIdOperationCompleted Is Nothing) Then
                Me.getInterviewByIdOperationCompleted = AddressOf Me.OngetInterviewByIdOperationCompleted
            End If
            Me.InvokeAsync("getInterviewById", New Object() {in0, in1}, Me.getInterviewByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInterviewByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInterviewByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInterviewByIdCompleted(Me, New getInterviewByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createInterview(ByVal in0 As String, ByVal in1 As InterviewBean) As <System.Xml.Serialization.XmlElementAttribute("createInterviewReturn")> Long
            Dim results() As Object = Me.Invoke("createInterview", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createInterviewAsync(ByVal in0 As String, ByVal in1 As InterviewBean)
            Me.createInterviewAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createInterviewAsync(ByVal in0 As String, ByVal in1 As InterviewBean, ByVal userState As Object)
            If (Me.createInterviewOperationCompleted Is Nothing) Then
                Me.createInterviewOperationCompleted = AddressOf Me.OncreateInterviewOperationCompleted
            End If
            Me.InvokeAsync("createInterview", New Object() {in0, in1}, Me.createInterviewOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateInterviewOperationCompleted(ByVal arg As Object)
            If (Not (Me.createInterviewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createInterviewCompleted(Me, New createInterviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateInterview(ByVal in0 As String, ByVal in1 As InterviewBean)
            Me.Invoke("updateInterview", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateInterviewAsync(ByVal in0 As String, ByVal in1 As InterviewBean)
            Me.updateInterviewAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateInterviewAsync(ByVal in0 As String, ByVal in1 As InterviewBean, ByVal userState As Object)
            If (Me.updateInterviewOperationCompleted Is Nothing) Then
                Me.updateInterviewOperationCompleted = AddressOf Me.OnupdateInterviewOperationCompleted
            End If
            Me.InvokeAsync("updateInterview", New Object() {in0, in1}, Me.updateInterviewOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateInterviewOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateInterviewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateInterviewCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteInterview(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteInterview", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteInterviewAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteInterviewAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteInterviewAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteInterviewOperationCompleted Is Nothing) Then
                Me.deleteInterviewOperationCompleted = AddressOf Me.OndeleteInterviewOperationCompleted
            End If
            Me.InvokeAsync("deleteInterview", New Object() {in0, in1}, Me.deleteInterviewOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteInterviewOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteInterviewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteInterviewCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getOfferById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getOfferByIdReturn")> OfferBean
            Dim results() As Object = Me.Invoke("getOfferById", New Object() {in0, in1})
            Return CType(results(0),OfferBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOfferByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getOfferByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOfferByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getOfferByIdOperationCompleted Is Nothing) Then
                Me.getOfferByIdOperationCompleted = AddressOf Me.OngetOfferByIdOperationCompleted
            End If
            Me.InvokeAsync("getOfferById", New Object() {in0, in1}, Me.getOfferByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOfferByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOfferByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOfferByIdCompleted(Me, New getOfferByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createOffer(ByVal in0 As String, ByVal in1 As OfferBean) As <System.Xml.Serialization.XmlElementAttribute("createOfferReturn")> Long
            Dim results() As Object = Me.Invoke("createOffer", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createOfferAsync(ByVal in0 As String, ByVal in1 As OfferBean)
            Me.createOfferAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createOfferAsync(ByVal in0 As String, ByVal in1 As OfferBean, ByVal userState As Object)
            If (Me.createOfferOperationCompleted Is Nothing) Then
                Me.createOfferOperationCompleted = AddressOf Me.OncreateOfferOperationCompleted
            End If
            Me.InvokeAsync("createOffer", New Object() {in0, in1}, Me.createOfferOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateOfferOperationCompleted(ByVal arg As Object)
            If (Not (Me.createOfferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createOfferCompleted(Me, New createOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateOffer(ByVal in0 As String, ByVal in1 As OfferBean)
            Me.Invoke("updateOffer", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateOfferAsync(ByVal in0 As String, ByVal in1 As OfferBean)
            Me.updateOfferAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateOfferAsync(ByVal in0 As String, ByVal in1 As OfferBean, ByVal userState As Object)
            If (Me.updateOfferOperationCompleted Is Nothing) Then
                Me.updateOfferOperationCompleted = AddressOf Me.OnupdateOfferOperationCompleted
            End If
            Me.InvokeAsync("updateOffer", New Object() {in0, in1}, Me.updateOfferOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateOfferOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateOfferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateOfferCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub setBinaryOffer(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As ByteArr)
            Me.Invoke("setBinaryOffer", New Object() {in0, in1, in2, in3})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setBinaryOfferAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As ByteArr)
            Me.setBinaryOfferAsync(in0, in1, in2, in3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setBinaryOfferAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As ByteArr, ByVal userState As Object)
            If (Me.setBinaryOfferOperationCompleted Is Nothing) Then
                Me.setBinaryOfferOperationCompleted = AddressOf Me.OnsetBinaryOfferOperationCompleted
            End If
            Me.InvokeAsync("setBinaryOffer", New Object() {in0, in1, in2, in3}, Me.setBinaryOfferOperationCompleted, userState)
        End Sub
        
        Private Sub OnsetBinaryOfferOperationCompleted(ByVal arg As Object)
            If (Not (Me.setBinaryOfferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent setBinaryOfferCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getBinaryOffer(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getBinaryOfferReturn")> ByteArr
            Dim results() As Object = Me.Invoke("getBinaryOffer", New Object() {in0, in1})
            Return CType(results(0),ByteArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBinaryOfferAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getBinaryOfferAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBinaryOfferAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getBinaryOfferOperationCompleted Is Nothing) Then
                Me.getBinaryOfferOperationCompleted = AddressOf Me.OngetBinaryOfferOperationCompleted
            End If
            Me.InvokeAsync("getBinaryOffer", New Object() {in0, in1}, Me.getBinaryOfferOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBinaryOfferOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBinaryOfferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBinaryOfferCompleted(Me, New getBinaryOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteOffer(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteOffer", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteOfferAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteOfferAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteOfferAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteOfferOperationCompleted Is Nothing) Then
                Me.deleteOfferOperationCompleted = AddressOf Me.OndeleteOfferOperationCompleted
            End If
            Me.InvokeAsync("deleteOffer", New Object() {in0, in1}, Me.deleteOfferOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteOfferOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteOfferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteOfferCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getReferencesByCandidate(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getReferencesByCandidateReturn")> LongArr
            Dim results() As Object = Me.Invoke("getReferencesByCandidate", New Object() {in0, in1})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getReferencesByCandidateAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getReferencesByCandidateAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getReferencesByCandidateAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getReferencesByCandidateOperationCompleted Is Nothing) Then
                Me.getReferencesByCandidateOperationCompleted = AddressOf Me.OngetReferencesByCandidateOperationCompleted
            End If
            Me.InvokeAsync("getReferencesByCandidate", New Object() {in0, in1}, Me.getReferencesByCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetReferencesByCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getReferencesByCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getReferencesByCandidateCompleted(Me, New getReferencesByCandidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getReferenceById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getReferenceByIdReturn")> ReferenceBean
            Dim results() As Object = Me.Invoke("getReferenceById", New Object() {in0, in1})
            Return CType(results(0),ReferenceBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getReferenceByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getReferenceByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getReferenceByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getReferenceByIdOperationCompleted Is Nothing) Then
                Me.getReferenceByIdOperationCompleted = AddressOf Me.OngetReferenceByIdOperationCompleted
            End If
            Me.InvokeAsync("getReferenceById", New Object() {in0, in1}, Me.getReferenceByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetReferenceByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getReferenceByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getReferenceByIdCompleted(Me, New getReferenceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateReference(ByVal in0 As String, ByVal in1 As ReferenceBean)
            Me.Invoke("updateReference", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateReferenceAsync(ByVal in0 As String, ByVal in1 As ReferenceBean)
            Me.updateReferenceAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateReferenceAsync(ByVal in0 As String, ByVal in1 As ReferenceBean, ByVal userState As Object)
            If (Me.updateReferenceOperationCompleted Is Nothing) Then
                Me.updateReferenceOperationCompleted = AddressOf Me.OnupdateReferenceOperationCompleted
            End If
            Me.InvokeAsync("updateReference", New Object() {in0, in1}, Me.updateReferenceOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateReferenceOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateReferenceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateReferenceCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteReference(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteReference", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteReferenceAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteReferenceAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteReferenceAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteReferenceOperationCompleted Is Nothing) Then
                Me.deleteReferenceOperationCompleted = AddressOf Me.OndeleteReferenceOperationCompleted
            End If
            Me.InvokeAsync("deleteReference", New Object() {in0, in1}, Me.deleteReferenceOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteReferenceOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteReferenceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteReferenceCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function searchRequisition(ByVal in0 As String, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal in1() As mapItem) As <System.Xml.Serialization.XmlElementAttribute("searchRequisitionReturn")> SearchResultArr
            Dim results() As Object = Me.Invoke("searchRequisition", New Object() {in0, in1})
            Return CType(results(0),SearchResultArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchRequisitionAsync(ByVal in0 As String, ByVal in1() As mapItem)
            Me.searchRequisitionAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchRequisitionAsync(ByVal in0 As String, ByVal in1() As mapItem, ByVal userState As Object)
            If (Me.searchRequisitionOperationCompleted Is Nothing) Then
                Me.searchRequisitionOperationCompleted = AddressOf Me.OnsearchRequisitionOperationCompleted
            End If
            Me.InvokeAsync("searchRequisition", New Object() {in0, in1}, Me.searchRequisitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchRequisitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchRequisitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchRequisitionCompleted(Me, New searchRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getRequisitionById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getRequisitionByIdReturn")> RequisitionBean
            Dim results() As Object = Me.Invoke("getRequisitionById", New Object() {in0, in1})
            Return CType(results(0),RequisitionBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getRequisitionByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getRequisitionByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getRequisitionByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getRequisitionByIdOperationCompleted Is Nothing) Then
                Me.getRequisitionByIdOperationCompleted = AddressOf Me.OngetRequisitionByIdOperationCompleted
            End If
            Me.InvokeAsync("getRequisitionById", New Object() {in0, in1}, Me.getRequisitionByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetRequisitionByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getRequisitionByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getRequisitionByIdCompleted(Me, New getRequisitionByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getCandidatesByRequisition(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getCandidatesByRequisitionReturn")> LongArr
            Dim results() As Object = Me.Invoke("getCandidatesByRequisition", New Object() {in0, in1})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCandidatesByRequisitionAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getCandidatesByRequisitionAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCandidatesByRequisitionAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getCandidatesByRequisitionOperationCompleted Is Nothing) Then
                Me.getCandidatesByRequisitionOperationCompleted = AddressOf Me.OngetCandidatesByRequisitionOperationCompleted
            End If
            Me.InvokeAsync("getCandidatesByRequisition", New Object() {in0, in1}, Me.getCandidatesByRequisitionOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCandidatesByRequisitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCandidatesByRequisitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCandidatesByRequisitionCompleted(Me, New getCandidatesByRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getAssociatedUsers(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String) As <System.Xml.Serialization.XmlElementAttribute("getAssociatedUsersReturn")> LongArr
            Dim results() As Object = Me.Invoke("getAssociatedUsers", New Object() {in0, in1, in2})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAssociatedUsersAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String)
            Me.getAssociatedUsersAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAssociatedUsersAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal userState As Object)
            If (Me.getAssociatedUsersOperationCompleted Is Nothing) Then
                Me.getAssociatedUsersOperationCompleted = AddressOf Me.OngetAssociatedUsersOperationCompleted
            End If
            Me.InvokeAsync("getAssociatedUsers", New Object() {in0, in1, in2}, Me.getAssociatedUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAssociatedUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAssociatedUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAssociatedUsersCompleted(Me, New getAssociatedUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createRequisition(ByVal in0 As String, ByVal in1 As RequisitionBean) As <System.Xml.Serialization.XmlElementAttribute("createRequisitionReturn")> Long
            Dim results() As Object = Me.Invoke("createRequisition", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createRequisitionAsync(ByVal in0 As String, ByVal in1 As RequisitionBean)
            Me.createRequisitionAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createRequisitionAsync(ByVal in0 As String, ByVal in1 As RequisitionBean, ByVal userState As Object)
            If (Me.createRequisitionOperationCompleted Is Nothing) Then
                Me.createRequisitionOperationCompleted = AddressOf Me.OncreateRequisitionOperationCompleted
            End If
            Me.InvokeAsync("createRequisition", New Object() {in0, in1}, Me.createRequisitionOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateRequisitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.createRequisitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createRequisitionCompleted(Me, New createRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateRequisition(ByVal in0 As String, ByVal in1 As RequisitionBean)
            Me.Invoke("updateRequisition", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateRequisitionAsync(ByVal in0 As String, ByVal in1 As RequisitionBean)
            Me.updateRequisitionAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateRequisitionAsync(ByVal in0 As String, ByVal in1 As RequisitionBean, ByVal userState As Object)
            If (Me.updateRequisitionOperationCompleted Is Nothing) Then
                Me.updateRequisitionOperationCompleted = AddressOf Me.OnupdateRequisitionOperationCompleted
            End If
            Me.InvokeAsync("updateRequisition", New Object() {in0, in1}, Me.updateRequisitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateRequisitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateRequisitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateRequisitionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub setAssociatedUser(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As Long, ByVal in4 As Integer)
            Me.Invoke("setAssociatedUser", New Object() {in0, in1, in2, in3, in4})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setAssociatedUserAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As Long, ByVal in4 As Integer)
            Me.setAssociatedUserAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setAssociatedUserAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As Long, ByVal in4 As Integer, ByVal userState As Object)
            If (Me.setAssociatedUserOperationCompleted Is Nothing) Then
                Me.setAssociatedUserOperationCompleted = AddressOf Me.OnsetAssociatedUserOperationCompleted
            End If
            Me.InvokeAsync("setAssociatedUser", New Object() {in0, in1, in2, in3, in4}, Me.setAssociatedUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnsetAssociatedUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.setAssociatedUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent setAssociatedUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub removeAssociatedUser(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As Long)
            Me.Invoke("removeAssociatedUser", New Object() {in0, in1, in2, in3})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub removeAssociatedUserAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As Long)
            Me.removeAssociatedUserAsync(in0, in1, in2, in3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub removeAssociatedUserAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As Long, ByVal userState As Object)
            If (Me.removeAssociatedUserOperationCompleted Is Nothing) Then
                Me.removeAssociatedUserOperationCompleted = AddressOf Me.OnremoveAssociatedUserOperationCompleted
            End If
            Me.InvokeAsync("removeAssociatedUser", New Object() {in0, in1, in2, in3}, Me.removeAssociatedUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnremoveAssociatedUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.removeAssociatedUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent removeAssociatedUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteRequisition(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteRequisition", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteRequisitionAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteRequisitionAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteRequisitionAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteRequisitionOperationCompleted Is Nothing) Then
                Me.deleteRequisitionOperationCompleted = AddressOf Me.OndeleteRequisitionOperationCompleted
            End If
            Me.InvokeAsync("deleteRequisition", New Object() {in0, in1}, Me.deleteRequisitionOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteRequisitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteRequisitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteRequisitionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getTaskByEntity(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long) As <System.Xml.Serialization.XmlElementAttribute("getTaskByEntityReturn")> LongArr
            Dim results() As Object = Me.Invoke("getTaskByEntity", New Object() {in0, in1, in2})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTaskByEntityAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long)
            Me.getTaskByEntityAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTaskByEntityAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long, ByVal userState As Object)
            If (Me.getTaskByEntityOperationCompleted Is Nothing) Then
                Me.getTaskByEntityOperationCompleted = AddressOf Me.OngetTaskByEntityOperationCompleted
            End If
            Me.InvokeAsync("getTaskByEntity", New Object() {in0, in1, in2}, Me.getTaskByEntityOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTaskByEntityOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTaskByEntityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTaskByEntityCompleted(Me, New getTaskByEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getTaskByUser(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Date, ByVal in3 As Date) As <System.Xml.Serialization.XmlElementAttribute("getTaskByUserReturn")> LongArr
            Dim results() As Object = Me.Invoke("getTaskByUser", New Object() {in0, in1, in2, in3})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTaskByUserAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Date, ByVal in3 As Date)
            Me.getTaskByUserAsync(in0, in1, in2, in3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTaskByUserAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Date, ByVal in3 As Date, ByVal userState As Object)
            If (Me.getTaskByUserOperationCompleted Is Nothing) Then
                Me.getTaskByUserOperationCompleted = AddressOf Me.OngetTaskByUserOperationCompleted
            End If
            Me.InvokeAsync("getTaskByUser", New Object() {in0, in1, in2, in3}, Me.getTaskByUserOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTaskByUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTaskByUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTaskByUserCompleted(Me, New getTaskByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getTaskById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getTaskByIdReturn")> TaskBean
            Dim results() As Object = Me.Invoke("getTaskById", New Object() {in0, in1})
            Return CType(results(0),TaskBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTaskByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getTaskByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTaskByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getTaskByIdOperationCompleted Is Nothing) Then
                Me.getTaskByIdOperationCompleted = AddressOf Me.OngetTaskByIdOperationCompleted
            End If
            Me.InvokeAsync("getTaskById", New Object() {in0, in1}, Me.getTaskByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTaskByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTaskByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTaskByIdCompleted(Me, New getTaskByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateTask(ByVal in0 As String, ByVal in1 As TaskBean)
            Me.Invoke("updateTask", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateTaskAsync(ByVal in0 As String, ByVal in1 As TaskBean)
            Me.updateTaskAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateTaskAsync(ByVal in0 As String, ByVal in1 As TaskBean, ByVal userState As Object)
            If (Me.updateTaskOperationCompleted Is Nothing) Then
                Me.updateTaskOperationCompleted = AddressOf Me.OnupdateTaskOperationCompleted
            End If
            Me.InvokeAsync("updateTask", New Object() {in0, in1}, Me.updateTaskOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateTaskOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateTaskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateTaskCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteTask(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteTask", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteTaskAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteTaskAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteTaskAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteTaskOperationCompleted Is Nothing) Then
                Me.deleteTaskOperationCompleted = AddressOf Me.OndeleteTaskOperationCompleted
            End If
            Me.InvokeAsync("deleteTask", New Object() {in0, in1}, Me.deleteTaskOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteTaskOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteTaskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteTaskCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function searchUser(ByVal in0 As String, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal in1() As mapItem) As <System.Xml.Serialization.XmlElementAttribute("searchUserReturn")> SearchResultArr
            Dim results() As Object = Me.Invoke("searchUser", New Object() {in0, in1})
            Return CType(results(0),SearchResultArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchUserAsync(ByVal in0 As String, ByVal in1() As mapItem)
            Me.searchUserAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchUserAsync(ByVal in0 As String, ByVal in1() As mapItem, ByVal userState As Object)
            If (Me.searchUserOperationCompleted Is Nothing) Then
                Me.searchUserOperationCompleted = AddressOf Me.OnsearchUserOperationCompleted
            End If
            Me.InvokeAsync("searchUser", New Object() {in0, in1}, Me.searchUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchUserCompleted(Me, New searchUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getUserById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getUserByIdReturn")> UserBean
            Dim results() As Object = Me.Invoke("getUserById", New Object() {in0, in1})
            Return CType(results(0),UserBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUserByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getUserByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUserByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getUserByIdOperationCompleted Is Nothing) Then
                Me.getUserByIdOperationCompleted = AddressOf Me.OngetUserByIdOperationCompleted
            End If
            Me.InvokeAsync("getUserById", New Object() {in0, in1}, Me.getUserByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUserByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUserByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUserByIdCompleted(Me, New getUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createUser(ByVal in0 As String, ByVal in1 As UserBean) As <System.Xml.Serialization.XmlElementAttribute("createUserReturn")> Long
            Dim results() As Object = Me.Invoke("createUser", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createUserAsync(ByVal in0 As String, ByVal in1 As UserBean)
            Me.createUserAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createUserAsync(ByVal in0 As String, ByVal in1 As UserBean, ByVal userState As Object)
            If (Me.createUserOperationCompleted Is Nothing) Then
                Me.createUserOperationCompleted = AddressOf Me.OncreateUserOperationCompleted
            End If
            Me.InvokeAsync("createUser", New Object() {in0, in1}, Me.createUserOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.createUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createUserCompleted(Me, New createUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createUserWithPermissions(ByVal sessionId As String, ByVal userBeanToCreate As UserBean, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal additionalEntities() As mapItem) As <System.Xml.Serialization.XmlElementAttribute("createUserWithPermissionsReturn")> Long
            Dim results() As Object = Me.Invoke("createUserWithPermissions", New Object() {sessionId, userBeanToCreate, additionalEntities})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createUserWithPermissionsAsync(ByVal sessionId As String, ByVal userBeanToCreate As UserBean, ByVal additionalEntities() As mapItem)
            Me.createUserWithPermissionsAsync(sessionId, userBeanToCreate, additionalEntities, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createUserWithPermissionsAsync(ByVal sessionId As String, ByVal userBeanToCreate As UserBean, ByVal additionalEntities() As mapItem, ByVal userState As Object)
            If (Me.createUserWithPermissionsOperationCompleted Is Nothing) Then
                Me.createUserWithPermissionsOperationCompleted = AddressOf Me.OncreateUserWithPermissionsOperationCompleted
            End If
            Me.InvokeAsync("createUserWithPermissions", New Object() {sessionId, userBeanToCreate, additionalEntities}, Me.createUserWithPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateUserWithPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.createUserWithPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createUserWithPermissionsCompleted(Me, New createUserWithPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateUser(ByVal in0 As String, ByVal in1 As UserBean)
            Me.Invoke("updateUser", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateUserAsync(ByVal in0 As String, ByVal in1 As UserBean)
            Me.updateUserAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateUserAsync(ByVal in0 As String, ByVal in1 As UserBean, ByVal userState As Object)
            If (Me.updateUserOperationCompleted Is Nothing) Then
                Me.updateUserOperationCompleted = AddressOf Me.OnupdateUserOperationCompleted
            End If
            Me.InvokeAsync("updateUser", New Object() {in0, in1}, Me.updateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteUser(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteUser", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteUserAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteUserAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteUserAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteUserOperationCompleted Is Nothing) Then
                Me.deleteUserOperationCompleted = AddressOf Me.OndeleteUserOperationCompleted
            End If
            Me.InvokeAsync("deleteUser", New Object() {in0, in1}, Me.deleteUserOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getContactLogsByEntity(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long) As <System.Xml.Serialization.XmlElementAttribute("getContactLogsByEntityReturn")> LongArr
            Dim results() As Object = Me.Invoke("getContactLogsByEntity", New Object() {in0, in1, in2})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getContactLogsByEntityAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long)
            Me.getContactLogsByEntityAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getContactLogsByEntityAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As Long, ByVal userState As Object)
            If (Me.getContactLogsByEntityOperationCompleted Is Nothing) Then
                Me.getContactLogsByEntityOperationCompleted = AddressOf Me.OngetContactLogsByEntityOperationCompleted
            End If
            Me.InvokeAsync("getContactLogsByEntity", New Object() {in0, in1, in2}, Me.getContactLogsByEntityOperationCompleted, userState)
        End Sub
        
        Private Sub OngetContactLogsByEntityOperationCompleted(ByVal arg As Object)
            If (Not (Me.getContactLogsByEntityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getContactLogsByEntityCompleted(Me, New getContactLogsByEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getContactLogById(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getContactLogByIdReturn")> ContactLogBean
            Dim results() As Object = Me.Invoke("getContactLogById", New Object() {in0, in1})
            Return CType(results(0),ContactLogBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getContactLogByIdAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getContactLogByIdAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getContactLogByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getContactLogByIdOperationCompleted Is Nothing) Then
                Me.getContactLogByIdOperationCompleted = AddressOf Me.OngetContactLogByIdOperationCompleted
            End If
            Me.InvokeAsync("getContactLogById", New Object() {in0, in1}, Me.getContactLogByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetContactLogByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getContactLogByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getContactLogByIdCompleted(Me, New getContactLogByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createContactLog(ByVal in0 As String, ByVal in1 As ContactLogBean) As <System.Xml.Serialization.XmlElementAttribute("createContactLogReturn")> Long
            Dim results() As Object = Me.Invoke("createContactLog", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createContactLogAsync(ByVal in0 As String, ByVal in1 As ContactLogBean)
            Me.createContactLogAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createContactLogAsync(ByVal in0 As String, ByVal in1 As ContactLogBean, ByVal userState As Object)
            If (Me.createContactLogOperationCompleted Is Nothing) Then
                Me.createContactLogOperationCompleted = AddressOf Me.OncreateContactLogOperationCompleted
            End If
            Me.InvokeAsync("createContactLog", New Object() {in0, in1}, Me.createContactLogOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateContactLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.createContactLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createContactLogCompleted(Me, New createContactLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createEmailLog(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal in3 As String, ByVal in4 As Date) As <System.Xml.Serialization.XmlElementAttribute("createEmailLogReturn")> Long
            Dim results() As Object = Me.Invoke("createEmailLog", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createEmailLogAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal in3 As String, ByVal in4 As Date)
            Me.createEmailLogAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createEmailLogAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal in3 As String, ByVal in4 As Date, ByVal userState As Object)
            If (Me.createEmailLogOperationCompleted Is Nothing) Then
                Me.createEmailLogOperationCompleted = AddressOf Me.OncreateEmailLogOperationCompleted
            End If
            Me.InvokeAsync("createEmailLog", New Object() {in0, in1, in2, in3, in4}, Me.createEmailLogOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateEmailLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.createEmailLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createEmailLogCompleted(Me, New createEmailLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createEmailSentLog(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal in3 As String, ByVal in4 As Date) As <System.Xml.Serialization.XmlElementAttribute("createEmailSentLogReturn")> Long
            Dim results() As Object = Me.Invoke("createEmailSentLog", New Object() {in0, in1, in2, in3, in4})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createEmailSentLogAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal in3 As String, ByVal in4 As Date)
            Me.createEmailSentLogAsync(in0, in1, in2, in3, in4, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createEmailSentLogAsync(ByVal in0 As String, ByVal in1 As String, ByVal in2 As String, ByVal in3 As String, ByVal in4 As Date, ByVal userState As Object)
            If (Me.createEmailSentLogOperationCompleted Is Nothing) Then
                Me.createEmailSentLogOperationCompleted = AddressOf Me.OncreateEmailSentLogOperationCompleted
            End If
            Me.InvokeAsync("createEmailSentLog", New Object() {in0, in1, in2, in3, in4}, Me.createEmailSentLogOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateEmailSentLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.createEmailSentLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createEmailSentLogCompleted(Me, New createEmailSentLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateContactLog(ByVal in0 As String, ByVal in1 As ContactLogBean)
            Me.Invoke("updateContactLog", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateContactLogAsync(ByVal in0 As String, ByVal in1 As ContactLogBean)
            Me.updateContactLogAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateContactLogAsync(ByVal in0 As String, ByVal in1 As ContactLogBean, ByVal userState As Object)
            If (Me.updateContactLogOperationCompleted Is Nothing) Then
                Me.updateContactLogOperationCompleted = AddressOf Me.OnupdateContactLogOperationCompleted
            End If
            Me.InvokeAsync("updateContactLog", New Object() {in0, in1}, Me.updateContactLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateContactLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateContactLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateContactLogCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteContactLog(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteContactLog", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteContactLogAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteContactLogAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteContactLogAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteContactLogOperationCompleted Is Nothing) Then
                Me.deleteContactLogOperationCompleted = AddressOf Me.OndeleteContactLogOperationCompleted
            End If
            Me.InvokeAsync("deleteContactLog", New Object() {in0, in1}, Me.deleteContactLogOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteContactLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteContactLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteContactLogCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getSystemProps(ByVal in0 As String) As <System.Xml.Serialization.XmlArrayAttribute("getSystemPropsReturn"), System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> mapItem()
            Dim results() As Object = Me.Invoke("getSystemProps", New Object() {in0})
            Return CType(results(0),mapItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSystemPropsAsync(ByVal in0 As String)
            Me.getSystemPropsAsync(in0, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemPropsAsync(ByVal in0 As String, ByVal userState As Object)
            If (Me.getSystemPropsOperationCompleted Is Nothing) Then
                Me.getSystemPropsOperationCompleted = AddressOf Me.OngetSystemPropsOperationCompleted
            End If
            Me.InvokeAsync("getSystemProps", New Object() {in0}, Me.getSystemPropsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSystemPropsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSystemPropsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSystemPropsCompleted(Me, New getSystemPropsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getCandReqStatus(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Long) As <System.Xml.Serialization.XmlElementAttribute("getCandReqStatusReturn")> String
            Dim results() As Object = Me.Invoke("getCandReqStatus", New Object() {in0, in1, in2})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCandReqStatusAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Long)
            Me.getCandReqStatusAsync(in0, in1, in2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCandReqStatusAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Long, ByVal userState As Object)
            If (Me.getCandReqStatusOperationCompleted Is Nothing) Then
                Me.getCandReqStatusOperationCompleted = AddressOf Me.OngetCandReqStatusOperationCompleted
            End If
            Me.InvokeAsync("getCandReqStatus", New Object() {in0, in1, in2}, Me.getCandReqStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCandReqStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCandReqStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCandReqStatusCompleted(Me, New getCandReqStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function parseResume(ByVal in0 As String, ByVal in1 As ByteArr) As <System.Xml.Serialization.XmlElementAttribute("parseResumeReturn")> String
            Dim results() As Object = Me.Invoke("parseResume", New Object() {in0, in1})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub parseResumeAsync(ByVal in0 As String, ByVal in1 As ByteArr)
            Me.parseResumeAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub parseResumeAsync(ByVal in0 As String, ByVal in1 As ByteArr, ByVal userState As Object)
            If (Me.parseResumeOperationCompleted Is Nothing) Then
                Me.parseResumeOperationCompleted = AddressOf Me.OnparseResumeOperationCompleted
            End If
            Me.InvokeAsync("parseResume", New Object() {in0, in1}, Me.parseResumeOperationCompleted, userState)
        End Sub
        
        Private Sub OnparseResumeOperationCompleted(ByVal arg As Object)
            If (Not (Me.parseResumeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent parseResumeCompleted(Me, New parseResumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function parseResumeIntoCandidate(ByVal in0 As String, ByVal in1 As ByteArr, ByVal referredBy As String, ByVal fileName As String) As <System.Xml.Serialization.XmlElementAttribute("parseResumeIntoCandidateReturn")> CandidateInsertResultBean
            Dim results() As Object = Me.Invoke("parseResumeIntoCandidate", New Object() {in0, in1, referredBy, fileName})
            Return CType(results(0),CandidateInsertResultBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub parseResumeIntoCandidateAsync(ByVal in0 As String, ByVal in1 As ByteArr, ByVal referredBy As String, ByVal fileName As String)
            Me.parseResumeIntoCandidateAsync(in0, in1, referredBy, fileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub parseResumeIntoCandidateAsync(ByVal in0 As String, ByVal in1 As ByteArr, ByVal referredBy As String, ByVal fileName As String, ByVal userState As Object)
            If (Me.parseResumeIntoCandidateOperationCompleted Is Nothing) Then
                Me.parseResumeIntoCandidateOperationCompleted = AddressOf Me.OnparseResumeIntoCandidateOperationCompleted
            End If
            Me.InvokeAsync("parseResumeIntoCandidate", New Object() {in0, in1, referredBy, fileName}, Me.parseResumeIntoCandidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnparseResumeIntoCandidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.parseResumeIntoCandidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent parseResumeIntoCandidateCompleted(Me, New parseResumeIntoCandidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getMetadata(ByVal in0 As String, ByVal in1 As String) As <System.Xml.Serialization.XmlElementAttribute("getMetadataReturn")> MetadataArr
            Dim results() As Object = Me.Invoke("getMetadata", New Object() {in0, in1})
            Return CType(results(0),MetadataArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMetadataAsync(ByVal in0 As String, ByVal in1 As String)
            Me.getMetadataAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMetadataAsync(ByVal in0 As String, ByVal in1 As String, ByVal userState As Object)
            If (Me.getMetadataOperationCompleted Is Nothing) Then
                Me.getMetadataOperationCompleted = AddressOf Me.OngetMetadataOperationCompleted
            End If
            Me.InvokeAsync("getMetadata", New Object() {in0, in1}, Me.getMetadataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMetadataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMetadataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMetadataCompleted(Me, New getMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getLookup(ByVal in0 As String, ByVal in1 As String) As <System.Xml.Serialization.XmlElementAttribute("getLookupReturn")> LookupArr
            Dim results() As Object = Me.Invoke("getLookup", New Object() {in0, in1})
            Return CType(results(0),LookupArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLookupAsync(ByVal in0 As String, ByVal in1 As String)
            Me.getLookupAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLookupAsync(ByVal in0 As String, ByVal in1 As String, ByVal userState As Object)
            If (Me.getLookupOperationCompleted Is Nothing) Then
                Me.getLookupOperationCompleted = AddressOf Me.OngetLookupOperationCompleted
            End If
            Me.InvokeAsync("getLookup", New Object() {in0, in1}, Me.getLookupOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLookupOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLookupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLookupCompleted(Me, New getLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub createLink(ByVal sessionId As String, ByVal entityType1 As String, ByVal entityId1 As Long, ByVal entityType2 As String, ByVal entityId2 As Long)
            Me.Invoke("createLink", New Object() {sessionId, entityType1, entityId1, entityType2, entityId2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createLinkAsync(ByVal sessionId As String, ByVal entityType1 As String, ByVal entityId1 As Long, ByVal entityType2 As String, ByVal entityId2 As Long)
            Me.createLinkAsync(sessionId, entityType1, entityId1, entityType2, entityId2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createLinkAsync(ByVal sessionId As String, ByVal entityType1 As String, ByVal entityId1 As Long, ByVal entityType2 As String, ByVal entityId2 As Long, ByVal userState As Object)
            If (Me.createLinkOperationCompleted Is Nothing) Then
                Me.createLinkOperationCompleted = AddressOf Me.OncreateLinkOperationCompleted
            End If
            Me.InvokeAsync("createLink", New Object() {sessionId, entityType1, entityId1, entityType2, entityId2}, Me.createLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.createLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createLinkCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub removeLink(ByVal sessionId As String, ByVal entityType1 As String, ByVal entityId1 As Long, ByVal entityType2 As String, ByVal entityId2 As Long)
            Me.Invoke("removeLink", New Object() {sessionId, entityType1, entityId1, entityType2, entityId2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub removeLinkAsync(ByVal sessionId As String, ByVal entityType1 As String, ByVal entityId1 As Long, ByVal entityType2 As String, ByVal entityId2 As Long)
            Me.removeLinkAsync(sessionId, entityType1, entityId1, entityType2, entityId2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub removeLinkAsync(ByVal sessionId As String, ByVal entityType1 As String, ByVal entityId1 As Long, ByVal entityType2 As String, ByVal entityId2 As Long, ByVal userState As Object)
            If (Me.removeLinkOperationCompleted Is Nothing) Then
                Me.removeLinkOperationCompleted = AddressOf Me.OnremoveLinkOperationCompleted
            End If
            Me.InvokeAsync("removeLink", New Object() {sessionId, entityType1, entityId1, entityType2, entityId2}, Me.removeLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnremoveLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.removeLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent removeLinkCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createAttachment(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As String, ByVal in4 As String, ByVal in5 As ByteArr) As <System.Xml.Serialization.XmlElementAttribute("createAttachmentReturn")> Long
            Dim results() As Object = Me.Invoke("createAttachment", New Object() {in0, in1, in2, in3, in4, in5})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createAttachmentAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As String, ByVal in4 As String, ByVal in5 As ByteArr)
            Me.createAttachmentAsync(in0, in1, in2, in3, in4, in5, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createAttachmentAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As String, ByVal in4 As String, ByVal in5 As ByteArr, ByVal userState As Object)
            If (Me.createAttachmentOperationCompleted Is Nothing) Then
                Me.createAttachmentOperationCompleted = AddressOf Me.OncreateAttachmentOperationCompleted
            End If
            Me.InvokeAsync("createAttachment", New Object() {in0, in1, in2, in3, in4, in5}, Me.createAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.createAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createAttachmentCompleted(Me, New createAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createEntityAttachment(ByVal sessionId As String, ByVal entityType As String, ByVal entityId As Long, ByVal description As String, ByVal fileName As String, ByVal contentType As String, ByVal data As ByteArr) As <System.Xml.Serialization.XmlElementAttribute("createEntityAttachmentReturn")> Long
            Dim results() As Object = Me.Invoke("createEntityAttachment", New Object() {sessionId, entityType, entityId, description, fileName, contentType, data})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createEntityAttachmentAsync(ByVal sessionId As String, ByVal entityType As String, ByVal entityId As Long, ByVal description As String, ByVal fileName As String, ByVal contentType As String, ByVal data As ByteArr)
            Me.createEntityAttachmentAsync(sessionId, entityType, entityId, description, fileName, contentType, data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createEntityAttachmentAsync(ByVal sessionId As String, ByVal entityType As String, ByVal entityId As Long, ByVal description As String, ByVal fileName As String, ByVal contentType As String, ByVal data As ByteArr, ByVal userState As Object)
            If (Me.createEntityAttachmentOperationCompleted Is Nothing) Then
                Me.createEntityAttachmentOperationCompleted = AddressOf Me.OncreateEntityAttachmentOperationCompleted
            End If
            Me.InvokeAsync("createEntityAttachment", New Object() {sessionId, entityType, entityId, description, fileName, contentType, data}, Me.createEntityAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateEntityAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.createEntityAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createEntityAttachmentCompleted(Me, New createEntityAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateAttachment(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As String, ByVal in4 As String, ByVal in5 As ByteArr)
            Me.Invoke("updateAttachment", New Object() {in0, in1, in2, in3, in4, in5})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateAttachmentAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As String, ByVal in4 As String, ByVal in5 As ByteArr)
            Me.updateAttachmentAsync(in0, in1, in2, in3, in4, in5, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateAttachmentAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As String, ByVal in3 As String, ByVal in4 As String, ByVal in5 As ByteArr, ByVal userState As Object)
            If (Me.updateAttachmentOperationCompleted Is Nothing) Then
                Me.updateAttachmentOperationCompleted = AddressOf Me.OnupdateAttachmentOperationCompleted
            End If
            Me.InvokeAsync("updateAttachment", New Object() {in0, in1, in2, in3, in4, in5}, Me.updateAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateAttachmentCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteAttachment(ByVal in0 As String, ByVal in1 As Long)
            Me.Invoke("deleteAttachment", New Object() {in0, in1})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteAttachmentAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.deleteAttachmentAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteAttachmentAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.deleteAttachmentOperationCompleted Is Nothing) Then
                Me.deleteAttachmentOperationCompleted = AddressOf Me.OndeleteAttachmentOperationCompleted
            End If
            Me.InvokeAsync("deleteAttachment", New Object() {in0, in1}, Me.deleteAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteAttachmentCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getAttachments(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getAttachmentsReturn")> LongArr
            Dim results() As Object = Me.Invoke("getAttachments", New Object() {in0, in1})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAttachmentsAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getAttachmentsAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAttachmentsAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getAttachmentsOperationCompleted Is Nothing) Then
                Me.getAttachmentsOperationCompleted = AddressOf Me.OngetAttachmentsOperationCompleted
            End If
            Me.InvokeAsync("getAttachments", New Object() {in0, in1}, Me.getAttachmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAttachmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAttachmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAttachmentsCompleted(Me, New getAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getEntityAttachments(ByVal sessionId As String, ByVal entityType As String, ByVal entityId As Long) As <System.Xml.Serialization.XmlElementAttribute("getEntityAttachmentsReturn")> LongArr
            Dim results() As Object = Me.Invoke("getEntityAttachments", New Object() {sessionId, entityType, entityId})
            Return CType(results(0),LongArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEntityAttachmentsAsync(ByVal sessionId As String, ByVal entityType As String, ByVal entityId As Long)
            Me.getEntityAttachmentsAsync(sessionId, entityType, entityId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEntityAttachmentsAsync(ByVal sessionId As String, ByVal entityType As String, ByVal entityId As Long, ByVal userState As Object)
            If (Me.getEntityAttachmentsOperationCompleted Is Nothing) Then
                Me.getEntityAttachmentsOperationCompleted = AddressOf Me.OngetEntityAttachmentsOperationCompleted
            End If
            Me.InvokeAsync("getEntityAttachments", New Object() {sessionId, entityType, entityId}, Me.getEntityAttachmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEntityAttachmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEntityAttachmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEntityAttachmentsCompleted(Me, New getEntityAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getAttachment(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getAttachmentReturn")> AttachmentBean
            Dim results() As Object = Me.Invoke("getAttachment", New Object() {in0, in1})
            Return CType(results(0),AttachmentBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAttachmentAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getAttachmentAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAttachmentAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getAttachmentOperationCompleted Is Nothing) Then
                Me.getAttachmentOperationCompleted = AddressOf Me.OngetAttachmentOperationCompleted
            End If
            Me.InvokeAsync("getAttachment", New Object() {in0, in1}, Me.getAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAttachmentCompleted(Me, New getAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getAttachmentData(ByVal in0 As String, ByVal in1 As Long) As <System.Xml.Serialization.XmlElementAttribute("getAttachmentDataReturn")> ByteArr
            Dim results() As Object = Me.Invoke("getAttachmentData", New Object() {in0, in1})
            Return CType(results(0),ByteArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAttachmentDataAsync(ByVal in0 As String, ByVal in1 As Long)
            Me.getAttachmentDataAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAttachmentDataAsync(ByVal in0 As String, ByVal in1 As Long, ByVal userState As Object)
            If (Me.getAttachmentDataOperationCompleted Is Nothing) Then
                Me.getAttachmentDataOperationCompleted = AddressOf Me.OngetAttachmentDataOperationCompleted
            End If
            Me.InvokeAsync("getAttachmentData", New Object() {in0, in1}, Me.getAttachmentDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAttachmentDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAttachmentDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAttachmentDataCompleted(Me, New getAttachmentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getCandidateDetailsById(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Boolean, ByVal in3 As Boolean, ByVal in4 As Boolean, ByVal in5 As Boolean, ByVal in6 As Boolean, ByVal in7 As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getCandidateDetailsByIdReturn")> CandidateDetailsBean
            Dim results() As Object = Me.Invoke("getCandidateDetailsById", New Object() {in0, in1, in2, in3, in4, in5, in6, in7})
            Return CType(results(0),CandidateDetailsBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCandidateDetailsByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Boolean, ByVal in3 As Boolean, ByVal in4 As Boolean, ByVal in5 As Boolean, ByVal in6 As Boolean, ByVal in7 As Boolean)
            Me.getCandidateDetailsByIdAsync(in0, in1, in2, in3, in4, in5, in6, in7, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCandidateDetailsByIdAsync(ByVal in0 As String, ByVal in1 As Long, ByVal in2 As Boolean, ByVal in3 As Boolean, ByVal in4 As Boolean, ByVal in5 As Boolean, ByVal in6 As Boolean, ByVal in7 As Boolean, ByVal userState As Object)
            If (Me.getCandidateDetailsByIdOperationCompleted Is Nothing) Then
                Me.getCandidateDetailsByIdOperationCompleted = AddressOf Me.OngetCandidateDetailsByIdOperationCompleted
            End If
            Me.InvokeAsync("getCandidateDetailsById", New Object() {in0, in1, in2, in3, in4, in5, in6, in7}, Me.getCandidateDetailsByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCandidateDetailsByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCandidateDetailsByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCandidateDetailsByIdCompleted(Me, New getCandidateDetailsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createRequisitionTemplate(ByVal in0 As String, ByVal in1 As RequisitionBean) As <System.Xml.Serialization.XmlElementAttribute("createRequisitionTemplateReturn")> Long
            Dim results() As Object = Me.Invoke("createRequisitionTemplate", New Object() {in0, in1})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createRequisitionTemplateAsync(ByVal in0 As String, ByVal in1 As RequisitionBean)
            Me.createRequisitionTemplateAsync(in0, in1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createRequisitionTemplateAsync(ByVal in0 As String, ByVal in1 As RequisitionBean, ByVal userState As Object)
            If (Me.createRequisitionTemplateOperationCompleted Is Nothing) Then
                Me.createRequisitionTemplateOperationCompleted = AddressOf Me.OncreateRequisitionTemplateOperationCompleted
            End If
            Me.InvokeAsync("createRequisitionTemplate", New Object() {in0, in1}, Me.createRequisitionTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateRequisitionTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.createRequisitionTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createRequisitionTemplateCompleted(Me, New createRequisitionTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub postRequisition(ByVal sessionId As String, ByVal requisitionId As Long, ByVal posterId As Long, ByVal formVersion As Integer)
            Me.Invoke("postRequisition", New Object() {sessionId, requisitionId, posterId, formVersion})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub postRequisitionAsync(ByVal sessionId As String, ByVal requisitionId As Long, ByVal posterId As Long, ByVal formVersion As Integer)
            Me.postRequisitionAsync(sessionId, requisitionId, posterId, formVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub postRequisitionAsync(ByVal sessionId As String, ByVal requisitionId As Long, ByVal posterId As Long, ByVal formVersion As Integer, ByVal userState As Object)
            If (Me.postRequisitionOperationCompleted Is Nothing) Then
                Me.postRequisitionOperationCompleted = AddressOf Me.OnpostRequisitionOperationCompleted
            End If
            Me.InvokeAsync("postRequisition", New Object() {sessionId, requisitionId, posterId, formVersion}, Me.postRequisitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnpostRequisitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.postRequisitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent postRequisitionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub unpostRequisition(ByVal sessionId As String, ByVal requisitionId As Long, ByVal posterId As Long)
            Me.Invoke("unpostRequisition", New Object() {sessionId, requisitionId, posterId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub unpostRequisitionAsync(ByVal sessionId As String, ByVal requisitionId As Long, ByVal posterId As Long)
            Me.unpostRequisitionAsync(sessionId, requisitionId, posterId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub unpostRequisitionAsync(ByVal sessionId As String, ByVal requisitionId As Long, ByVal posterId As Long, ByVal userState As Object)
            If (Me.unpostRequisitionOperationCompleted Is Nothing) Then
                Me.unpostRequisitionOperationCompleted = AddressOf Me.OnunpostRequisitionOperationCompleted
            End If
            Me.InvokeAsync("unpostRequisition", New Object() {sessionId, requisitionId, posterId}, Me.unpostRequisitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnunpostRequisitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.unpostRequisitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent unpostRequisitionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub upsertCandidateToRequisitions(ByVal sessionId As String, ByVal candidateId As Long, ByVal requisitionIds As LongArr, ByVal statusId As Long, ByVal reasonId As Long, ByVal doRanking As Boolean)
            Me.Invoke("upsertCandidateToRequisitions", New Object() {sessionId, candidateId, requisitionIds, statusId, reasonId, doRanking})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub upsertCandidateToRequisitionsAsync(ByVal sessionId As String, ByVal candidateId As Long, ByVal requisitionIds As LongArr, ByVal statusId As Long, ByVal reasonId As Long, ByVal doRanking As Boolean)
            Me.upsertCandidateToRequisitionsAsync(sessionId, candidateId, requisitionIds, statusId, reasonId, doRanking, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub upsertCandidateToRequisitionsAsync(ByVal sessionId As String, ByVal candidateId As Long, ByVal requisitionIds As LongArr, ByVal statusId As Long, ByVal reasonId As Long, ByVal doRanking As Boolean, ByVal userState As Object)
            If (Me.upsertCandidateToRequisitionsOperationCompleted Is Nothing) Then
                Me.upsertCandidateToRequisitionsOperationCompleted = AddressOf Me.OnupsertCandidateToRequisitionsOperationCompleted
            End If
            Me.InvokeAsync("upsertCandidateToRequisitions", New Object() {sessionId, candidateId, requisitionIds, statusId, reasonId, doRanking}, Me.upsertCandidateToRequisitionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnupsertCandidateToRequisitionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.upsertCandidateToRequisitionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent upsertCandidateToRequisitionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function searchEmployee(ByVal sessionId As String, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal searchParams() As mapItem) As <System.Xml.Serialization.XmlElementAttribute("searchEmployeeReturn")> SearchResultArr
            Dim results() As Object = Me.Invoke("searchEmployee", New Object() {sessionId, searchParams})
            Return CType(results(0),SearchResultArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchEmployeeAsync(ByVal sessionId As String, ByVal searchParams() As mapItem)
            Me.searchEmployeeAsync(sessionId, searchParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchEmployeeAsync(ByVal sessionId As String, ByVal searchParams() As mapItem, ByVal userState As Object)
            If (Me.searchEmployeeOperationCompleted Is Nothing) Then
                Me.searchEmployeeOperationCompleted = AddressOf Me.OnsearchEmployeeOperationCompleted
            End If
            Me.InvokeAsync("searchEmployee", New Object() {sessionId, searchParams}, Me.searchEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchEmployeeCompleted(Me, New searchEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteEmployee(ByVal sessionId As String, ByVal employeeId As Long)
            Me.Invoke("deleteEmployee", New Object() {sessionId, employeeId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteEmployeeAsync(ByVal sessionId As String, ByVal employeeId As Long)
            Me.deleteEmployeeAsync(sessionId, employeeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteEmployeeAsync(ByVal sessionId As String, ByVal employeeId As Long, ByVal userState As Object)
            If (Me.deleteEmployeeOperationCompleted Is Nothing) Then
                Me.deleteEmployeeOperationCompleted = AddressOf Me.OndeleteEmployeeOperationCompleted
            End If
            Me.InvokeAsync("deleteEmployee", New Object() {sessionId, employeeId}, Me.deleteEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteEmployeeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteEmployeeByNumber(ByVal sessionId As String, ByVal employeeNumber As String)
            Me.Invoke("deleteEmployeeByNumber", New Object() {sessionId, employeeNumber})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteEmployeeByNumberAsync(ByVal sessionId As String, ByVal employeeNumber As String)
            Me.deleteEmployeeByNumberAsync(sessionId, employeeNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteEmployeeByNumberAsync(ByVal sessionId As String, ByVal employeeNumber As String, ByVal userState As Object)
            If (Me.deleteEmployeeByNumberOperationCompleted Is Nothing) Then
                Me.deleteEmployeeByNumberOperationCompleted = AddressOf Me.OndeleteEmployeeByNumberOperationCompleted
            End If
            Me.InvokeAsync("deleteEmployeeByNumber", New Object() {sessionId, employeeNumber}, Me.deleteEmployeeByNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteEmployeeByNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteEmployeeByNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteEmployeeByNumberCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function upsertEmployee(ByVal sessionId As String, ByVal employeeNumber As String, ByVal bean As EmployeeBean) As <System.Xml.Serialization.XmlElementAttribute("upsertEmployeeReturn")> Long
            Dim results() As Object = Me.Invoke("upsertEmployee", New Object() {sessionId, employeeNumber, bean})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub upsertEmployeeAsync(ByVal sessionId As String, ByVal employeeNumber As String, ByVal bean As EmployeeBean)
            Me.upsertEmployeeAsync(sessionId, employeeNumber, bean, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub upsertEmployeeAsync(ByVal sessionId As String, ByVal employeeNumber As String, ByVal bean As EmployeeBean, ByVal userState As Object)
            If (Me.upsertEmployeeOperationCompleted Is Nothing) Then
                Me.upsertEmployeeOperationCompleted = AddressOf Me.OnupsertEmployeeOperationCompleted
            End If
            Me.InvokeAsync("upsertEmployee", New Object() {sessionId, employeeNumber, bean}, Me.upsertEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnupsertEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.upsertEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent upsertEmployeeCompleted(Me, New upsertEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getEmployeeByNumber(ByVal sessionId As String, ByVal employeeNumber As String, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal additionalEntities() As Object) As <System.Xml.Serialization.XmlElementAttribute("getEmployeeByNumberReturn")> EmployeeBean
            Dim results() As Object = Me.Invoke("getEmployeeByNumber", New Object() {sessionId, employeeNumber, additionalEntities})
            Return CType(results(0),EmployeeBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEmployeeByNumberAsync(ByVal sessionId As String, ByVal employeeNumber As String, ByVal additionalEntities() As Object)
            Me.getEmployeeByNumberAsync(sessionId, employeeNumber, additionalEntities, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEmployeeByNumberAsync(ByVal sessionId As String, ByVal employeeNumber As String, ByVal additionalEntities() As Object, ByVal userState As Object)
            If (Me.getEmployeeByNumberOperationCompleted Is Nothing) Then
                Me.getEmployeeByNumberOperationCompleted = AddressOf Me.OngetEmployeeByNumberOperationCompleted
            End If
            Me.InvokeAsync("getEmployeeByNumber", New Object() {sessionId, employeeNumber, additionalEntities}, Me.getEmployeeByNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEmployeeByNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEmployeeByNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEmployeeByNumberCompleted(Me, New getEmployeeByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getEmployeeById(ByVal sessionId As String, ByVal employeeId As Long, <System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)> ByVal additionalEntities() As Object) As <System.Xml.Serialization.XmlElementAttribute("getEmployeeByIdReturn")> EmployeeBean
            Dim results() As Object = Me.Invoke("getEmployeeById", New Object() {sessionId, employeeId, additionalEntities})
            Return CType(results(0),EmployeeBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEmployeeByIdAsync(ByVal sessionId As String, ByVal employeeId As Long, ByVal additionalEntities() As Object)
            Me.getEmployeeByIdAsync(sessionId, employeeId, additionalEntities, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEmployeeByIdAsync(ByVal sessionId As String, ByVal employeeId As Long, ByVal additionalEntities() As Object, ByVal userState As Object)
            If (Me.getEmployeeByIdOperationCompleted Is Nothing) Then
                Me.getEmployeeByIdOperationCompleted = AddressOf Me.OngetEmployeeByIdOperationCompleted
            End If
            Me.InvokeAsync("getEmployeeById", New Object() {sessionId, employeeId, additionalEntities}, Me.getEmployeeByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEmployeeByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEmployeeByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEmployeeByIdCompleted(Me, New getEmployeeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function createEmployee(ByVal sessionId As String, ByVal bean As EmployeeBean) As <System.Xml.Serialization.XmlElementAttribute("createEmployeeReturn")> Long
            Dim results() As Object = Me.Invoke("createEmployee", New Object() {sessionId, bean})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub createEmployeeAsync(ByVal sessionId As String, ByVal bean As EmployeeBean)
            Me.createEmployeeAsync(sessionId, bean, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createEmployeeAsync(ByVal sessionId As String, ByVal bean As EmployeeBean, ByVal userState As Object)
            If (Me.createEmployeeOperationCompleted Is Nothing) Then
                Me.createEmployeeOperationCompleted = AddressOf Me.OncreateEmployeeOperationCompleted
            End If
            Me.InvokeAsync("createEmployee", New Object() {sessionId, bean}, Me.createEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.createEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createEmployeeCompleted(Me, New createEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub updateEmployee(ByVal sessionId As String, ByVal bean As EmployeeBean)
            Me.Invoke("updateEmployee", New Object() {sessionId, bean})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateEmployeeAsync(ByVal sessionId As String, ByVal bean As EmployeeBean)
            Me.updateEmployeeAsync(sessionId, bean, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub updateEmployeeAsync(ByVal sessionId As String, ByVal bean As EmployeeBean, ByVal userState As Object)
            If (Me.updateEmployeeOperationCompleted Is Nothing) Then
                Me.updateEmployeeOperationCompleted = AddressOf Me.OnupdateEmployeeOperationCompleted
            End If
            Me.InvokeAsync("updateEmployee", New Object() {sessionId, bean}, Me.updateEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnupdateEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.updateEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent updateEmployeeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getCandidateWorkHistory(ByVal sessionId As String, ByVal candidateId As Long) As <System.Xml.Serialization.XmlElementAttribute("getCandidateWorkHistoryReturn")> WorkHistoryArr
            Dim results() As Object = Me.Invoke("getCandidateWorkHistory", New Object() {sessionId, candidateId})
            Return CType(results(0),WorkHistoryArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCandidateWorkHistoryAsync(ByVal sessionId As String, ByVal candidateId As Long)
            Me.getCandidateWorkHistoryAsync(sessionId, candidateId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCandidateWorkHistoryAsync(ByVal sessionId As String, ByVal candidateId As Long, ByVal userState As Object)
            If (Me.getCandidateWorkHistoryOperationCompleted Is Nothing) Then
                Me.getCandidateWorkHistoryOperationCompleted = AddressOf Me.OngetCandidateWorkHistoryOperationCompleted
            End If
            Me.InvokeAsync("getCandidateWorkHistory", New Object() {sessionId, candidateId}, Me.getCandidateWorkHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCandidateWorkHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCandidateWorkHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCandidateWorkHistoryCompleted(Me, New getCandidateWorkHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function getRollingEntities(ByVal sessionId As String, ByVal rollingEntityType As String, ByVal entityType As String, ByVal entityId As Long) As <System.Xml.Serialization.XmlElementAttribute("getRollingEntitiesReturn")> FlexRollingEntityBeanArr
            Dim results() As Object = Me.Invoke("getRollingEntities", New Object() {sessionId, rollingEntityType, entityType, entityId})
            Return CType(results(0),FlexRollingEntityBeanArr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getRollingEntitiesAsync(ByVal sessionId As String, ByVal rollingEntityType As String, ByVal entityType As String, ByVal entityId As Long)
            Me.getRollingEntitiesAsync(sessionId, rollingEntityType, entityType, entityId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getRollingEntitiesAsync(ByVal sessionId As String, ByVal rollingEntityType As String, ByVal entityType As String, ByVal entityId As Long, ByVal userState As Object)
            If (Me.getRollingEntitiesOperationCompleted Is Nothing) Then
                Me.getRollingEntitiesOperationCompleted = AddressOf Me.OngetRollingEntitiesOperationCompleted
            End If
            Me.InvokeAsync("getRollingEntities", New Object() {sessionId, rollingEntityType, entityType, entityId}, Me.getRollingEntitiesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetRollingEntitiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getRollingEntitiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getRollingEntitiesCompleted(Me, New getRollingEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function upsertRollingEntity(ByVal sessionId As String, ByVal rollingEntityBean As FlexRollingEntityBean) As <System.Xml.Serialization.XmlElementAttribute("upsertRollingEntityReturn")> Long
            Dim results() As Object = Me.Invoke("upsertRollingEntity", New Object() {sessionId, rollingEntityBean})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub upsertRollingEntityAsync(ByVal sessionId As String, ByVal rollingEntityBean As FlexRollingEntityBean)
            Me.upsertRollingEntityAsync(sessionId, rollingEntityBean, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub upsertRollingEntityAsync(ByVal sessionId As String, ByVal rollingEntityBean As FlexRollingEntityBean, ByVal userState As Object)
            If (Me.upsertRollingEntityOperationCompleted Is Nothing) Then
                Me.upsertRollingEntityOperationCompleted = AddressOf Me.OnupsertRollingEntityOperationCompleted
            End If
            Me.InvokeAsync("upsertRollingEntity", New Object() {sessionId, rollingEntityBean}, Me.upsertRollingEntityOperationCompleted, userState)
        End Sub
        
        Private Sub OnupsertRollingEntityOperationCompleted(ByVal arg As Object)
            If (Not (Me.upsertRollingEntityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent upsertRollingEntityCompleted(Me, New upsertRollingEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:TBEWebAPI", ResponseNamespace:="urn:TBEWebAPI", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Sub deleteRollingEntity(ByVal sessionId As String, ByVal rollingEntityId As Long)
            Me.Invoke("deleteRollingEntity", New Object() {sessionId, rollingEntityId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteRollingEntityAsync(ByVal sessionId As String, ByVal rollingEntityId As Long)
            Me.deleteRollingEntityAsync(sessionId, rollingEntityId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteRollingEntityAsync(ByVal sessionId As String, ByVal rollingEntityId As Long, ByVal userState As Object)
            If (Me.deleteRollingEntityOperationCompleted Is Nothing) Then
                Me.deleteRollingEntityOperationCompleted = AddressOf Me.OndeleteRollingEntityOperationCompleted
            End If
            Me.InvokeAsync("deleteRollingEntity", New Object() {sessionId, rollingEntityId}, Me.deleteRollingEntityOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteRollingEntityOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteRollingEntityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteRollingEntityCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class TaskBean
        Inherits EntityBean
        
        Private assignedToField() As ParticipantBean
        
        Private creatorField As String
        
        Private descriptionField As String
        
        Private dueDateField As System.Nullable(Of Date)
        
        Private entityIdField As Long
        
        Private entityTypeField As String
        
        Private priorityField As String
        
        Private subjectField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property assignedTo() As ParticipantBean()
            Get
                Return Me.assignedToField
            End Get
            Set
                Me.assignedToField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property dueDate() As System.Nullable(Of Date)
            Get
                Return Me.dueDateField
            End Get
            Set
                Me.dueDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property entityId() As Long
            Get
                Return Me.entityIdField
            End Get
            Set
                Me.entityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property entityType() As String
            Get
                Return Me.entityTypeField
            End Get
            Set
                Me.entityTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property priority() As String
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property subject() As String
            Get
                Return Me.subjectField
            End Get
            Set
                Me.subjectField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class ParticipantBean
        
        Private endDateField As System.Nullable(Of Date)
        
        Private eventIdField As Long
        
        Private eventTypeField As String
        
        Private personIdField As Long
        
        Private personTypeField As String
        
        Private startDateField As System.Nullable(Of Date)
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property endDate() As System.Nullable(Of Date)
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property eventId() As Long
            Get
                Return Me.eventIdField
            End Get
            Set
                Me.eventIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property eventType() As String
            Get
                Return Me.eventTypeField
            End Get
            Set
                Me.eventTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property personId() As Long
            Get
                Return Me.personIdField
            End Get
            Set
                Me.personIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property personType() As String
            Get
                Return Me.personTypeField
            End Get
            Set
                Me.personTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property startDate() As System.Nullable(Of Date)
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class FlexRollingEntityBeanArr
        
        Private arrayField() As FlexRollingEntityBean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property array() As FlexRollingEntityBean()
            Get
                Return Me.arrayField
            End Get
            Set
                Me.arrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class FlexRollingEntityBean
        Inherits FlexEntityBean
        
        Private entityTypeField As String
        
        Private entityIdField As Long
        
        Private subTypeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property entityType() As String
            Get
                Return Me.entityTypeField
            End Get
            Set
                Me.entityTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property entityId() As Long
            Get
                Return Me.entityIdField
            End Get
            Set
                Me.entityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property subType() As String
            Get
                Return Me.subTypeField
            End Get
            Set
                Me.subTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FlexRollingEntityBean)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class FlexEntityBean
        Inherits EntityBean
        
        Private attributesField() As FlexFieldBean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property attributes() As FlexFieldBean()
            Get
                Return Me.attributesField
            End Get
            Set
                Me.attributesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class FlexFieldBean
        
        Private fieldNameField As String
        
        Private valueBoolField As System.Nullable(Of Boolean)
        
        Private valueDateField As System.Nullable(Of Date)
        
        Private valueDblField As System.Nullable(Of Double)
        
        Private valueIntField As System.Nullable(Of Integer)
        
        Private valueLongField As System.Nullable(Of Long)
        
        Private valueStrField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property fieldName() As String
            Get
                Return Me.fieldNameField
            End Get
            Set
                Me.fieldNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property valueBool() As System.Nullable(Of Boolean)
            Get
                Return Me.valueBoolField
            End Get
            Set
                Me.valueBoolField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property valueDate() As System.Nullable(Of Date)
            Get
                Return Me.valueDateField
            End Get
            Set
                Me.valueDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property valueDbl() As System.Nullable(Of Double)
            Get
                Return Me.valueDblField
            End Get
            Set
                Me.valueDblField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property valueInt() As System.Nullable(Of Integer)
            Get
                Return Me.valueIntField
            End Get
            Set
                Me.valueIntField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property valueLong() As System.Nullable(Of Long)
            Get
                Return Me.valueLongField
            End Get
            Set
                Me.valueLongField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property valueStr() As String
            Get
                Return Me.valueStrField
            End Get
            Set
                Me.valueStrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FlexEntityBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(FlexRollingEntityBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(WorkHistoryBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AddressEntityBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EmployeeBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RequisitionBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(OfferBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(InterviewBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ContactBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CandidateBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BackgroundCheckBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AccountBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CalendarEventBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ReferenceBean)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaskBean)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class EntityBean
        
        Private creationDateField As System.Nullable(Of Date)
        
        Private flexValuesField() As FlexFieldBean
        
        Private idField As Long
        
        Private lastUpdatedField As System.Nullable(Of Date)
        
        Private statusField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creationDate() As System.Nullable(Of Date)
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property flexValues() As FlexFieldBean()
            Get
                Return Me.flexValuesField
            End Get
            Set
                Me.flexValuesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property lastUpdated() As System.Nullable(Of Date)
            Get
                Return Me.lastUpdatedField
            End Get
            Set
                Me.lastUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class WorkHistoryBean
        Inherits EntityBean
        
        Private entityIdField As Long
        
        Private seqNoField As Integer
        
        Private jobTitleField As String
        
        Private companyNameField As String
        
        Private dateFromField As System.Nullable(Of Date)
        
        Private dateToField As System.Nullable(Of Date)
        
        Private jobDescriptionField As String
        
        Private companyStreetAddressField As String
        
        Private companyCityStateField As String
        
        Private phoneField As String
        
        Private directSupervisorField As String
        
        Private supervisorTitleField As String
        
        Private explanationField As String
        
        Private finalRateOfPayField As String
        
        Private okToContactField As Boolean
        
        Private reasonForLeavingField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property entityId() As Long
            Get
                Return Me.entityIdField
            End Get
            Set
                Me.entityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property seqNo() As Integer
            Get
                Return Me.seqNoField
            End Get
            Set
                Me.seqNoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property jobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property companyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property dateFrom() As System.Nullable(Of Date)
            Get
                Return Me.dateFromField
            End Get
            Set
                Me.dateFromField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property dateTo() As System.Nullable(Of Date)
            Get
                Return Me.dateToField
            End Get
            Set
                Me.dateToField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property jobDescription() As String
            Get
                Return Me.jobDescriptionField
            End Get
            Set
                Me.jobDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property companyStreetAddress() As String
            Get
                Return Me.companyStreetAddressField
            End Get
            Set
                Me.companyStreetAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property companyCityState() As String
            Get
                Return Me.companyCityStateField
            End Get
            Set
                Me.companyCityStateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property directSupervisor() As String
            Get
                Return Me.directSupervisorField
            End Get
            Set
                Me.directSupervisorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property supervisorTitle() As String
            Get
                Return Me.supervisorTitleField
            End Get
            Set
                Me.supervisorTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property explanation() As String
            Get
                Return Me.explanationField
            End Get
            Set
                Me.explanationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property finalRateOfPay() As String
            Get
                Return Me.finalRateOfPayField
            End Get
            Set
                Me.finalRateOfPayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property okToContact() As Boolean
            Get
                Return Me.okToContactField
            End Get
            Set
                Me.okToContactField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property reasonForLeaving() As String
            Get
                Return Me.reasonForLeavingField
            End Get
            Set
                Me.reasonForLeavingField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(EmployeeBean)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class AddressEntityBean
        Inherits EntityBean
        
        Private cityField As String
        
        Private addressField As String
        
        Private zipCodeField As String
        
        Private stateField As String
        
        Private countryField As String
        
        Private phoneField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property zipCode() As String
            Get
                Return Me.zipCodeField
            End Get
            Set
                Me.zipCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class EmployeeBean
        Inherits AddressEntityBean
        
        Private employeeNumberField As String
        
        Private emailField As String
        
        Private firstNameField As String
        
        Private middleInitialField As String
        
        Private lastNameField As String
        
        Private cellPhoneField As String
        
        Private titleField As String
        
        Private hiredDateField As System.Nullable(Of Date)
        
        Private startDateField As System.Nullable(Of Date)
        
        Private raceField As String
        
        Private genderField As String
        
        Private lockedFromEwsField As Boolean
        
        Private reviewManagerIdField As Long
        
        Private departmentIdField As Long
        
        Private hierarchyPathField As String
        
        Private managerIdField As Long
        
        Private locationIdField As Long
        
        Private ewsLoginField As String
        
        Private ewsPasswordField As String
        
        Private jobTitleField As String
        
        Private jobCodeField As String
        
        Private salaryGradeField As String
        
        Private salaryField As Double
        
        Private payFrequencyField As String
        
        Private changePswdOnEwsLoginField As Boolean
        
        Private additionalEntitiesField() As mapItem
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property employeeNumber() As String
            Get
                Return Me.employeeNumberField
            End Get
            Set
                Me.employeeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property firstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property middleInitial() As String
            Get
                Return Me.middleInitialField
            End Get
            Set
                Me.middleInitialField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property lastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property cellPhone() As String
            Get
                Return Me.cellPhoneField
            End Get
            Set
                Me.cellPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property hiredDate() As System.Nullable(Of Date)
            Get
                Return Me.hiredDateField
            End Get
            Set
                Me.hiredDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property startDate() As System.Nullable(Of Date)
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property race() As String
            Get
                Return Me.raceField
            End Get
            Set
                Me.raceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property lockedFromEws() As Boolean
            Get
                Return Me.lockedFromEwsField
            End Get
            Set
                Me.lockedFromEwsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property reviewManagerId() As Long
            Get
                Return Me.reviewManagerIdField
            End Get
            Set
                Me.reviewManagerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property departmentId() As Long
            Get
                Return Me.departmentIdField
            End Get
            Set
                Me.departmentIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property hierarchyPath() As String
            Get
                Return Me.hierarchyPathField
            End Get
            Set
                Me.hierarchyPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property managerId() As Long
            Get
                Return Me.managerIdField
            End Get
            Set
                Me.managerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property locationId() As Long
            Get
                Return Me.locationIdField
            End Get
            Set
                Me.locationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property ewsLogin() As String
            Get
                Return Me.ewsLoginField
            End Get
            Set
                Me.ewsLoginField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property ewsPassword() As String
            Get
                Return Me.ewsPasswordField
            End Get
            Set
                Me.ewsPasswordField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property jobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property jobCode() As String
            Get
                Return Me.jobCodeField
            End Get
            Set
                Me.jobCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property salaryGrade() As String
            Get
                Return Me.salaryGradeField
            End Get
            Set
                Me.salaryGradeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property salary() As Double
            Get
                Return Me.salaryField
            End Get
            Set
                Me.salaryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property payFrequency() As String
            Get
                Return Me.payFrequencyField
            End Get
            Set
                Me.payFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property changePswdOnEwsLogin() As Boolean
            Get
                Return Me.changePswdOnEwsLoginField
            End Get
            Set
                Me.changePswdOnEwsLoginField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property additionalEntities() As mapItem()
            Get
                Return Me.additionalEntitiesField
            End Get
            Set
                Me.additionalEntitiesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://xml.apache.org/xml-soap")>  _
    Partial Public Class mapItem
        
        Private keyField As Object
        
        Private valueField As Object
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property key() As Object
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class UserBean
        Inherits EntityBean
        
        Private cellPhoneField As String
        
        Private emailField As String
        
        Private faxField As String
        
        Private firstNameField As String
        
        Private lastLoginField As System.Nullable(Of Date)
        
        Private lastNameField As String
        
        Private localeCodeField As String
        
        Private locationField As String
        
        Private loginNameField As String
        
        Private managerField As String
        
        Private middleInitialField As String
        
        Private phoneField As String
        
        Private roleField As String
        
        Private timeZoneIdField As String
        
        Private titleField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property cellPhone() As String
            Get
                Return Me.cellPhoneField
            End Get
            Set
                Me.cellPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property firstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property lastLogin() As System.Nullable(Of Date)
            Get
                Return Me.lastLoginField
            End Get
            Set
                Me.lastLoginField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property lastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property localeCode() As String
            Get
                Return Me.localeCodeField
            End Get
            Set
                Me.localeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property loginName() As String
            Get
                Return Me.loginNameField
            End Get
            Set
                Me.loginNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property manager() As String
            Get
                Return Me.managerField
            End Get
            Set
                Me.managerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property middleInitial() As String
            Get
                Return Me.middleInitialField
            End Get
            Set
                Me.middleInitialField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property role() As String
            Get
                Return Me.roleField
            End Get
            Set
                Me.roleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property timeZoneId() As String
            Get
                Return Me.timeZoneIdField
            End Get
            Set
                Me.timeZoneIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class RequisitionBean
        Inherits EntityBean
        
        Private cityField As String
        
        Private descriptionField As String
        
        Private durationField As String
        
        Private filledDateField As System.Nullable(Of Date)
        
        Private jobCategoryField As String
        
        Private jobCodeField As String
        
        Private locationField As String
        
        Private numOpenField As Integer
        
        Private openedDateField As System.Nullable(Of Date)
        
        Private payRangeField As String
        
        Private stateField As String
        
        Private titleField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property duration() As String
            Get
                Return Me.durationField
            End Get
            Set
                Me.durationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property filledDate() As System.Nullable(Of Date)
            Get
                Return Me.filledDateField
            End Get
            Set
                Me.filledDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property jobCategory() As String
            Get
                Return Me.jobCategoryField
            End Get
            Set
                Me.jobCategoryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property jobCode() As String
            Get
                Return Me.jobCodeField
            End Get
            Set
                Me.jobCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property numOpen() As Integer
            Get
                Return Me.numOpenField
            End Get
            Set
                Me.numOpenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property openedDate() As System.Nullable(Of Date)
            Get
                Return Me.openedDateField
            End Get
            Set
                Me.openedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property payRange() As String
            Get
                Return Me.payRangeField
            End Get
            Set
                Me.payRangeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class OfferBean
        Inherits EntityBean
        
        Private candidateIdField As Long
        
        Private creatorField As String
        
        Private employmentTypeField As String
        
        Private expirationDateField As System.Nullable(Of Date)
        
        Private managerField As String
        
        Private offerFileNameField As String
        
        Private payRateField As String
        
        Private requisitionIdField As Long
        
        Private startDateField As System.Nullable(Of Date)
        
        Private stockOptionsField As String
        
        Private titleField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property candidateId() As Long
            Get
                Return Me.candidateIdField
            End Get
            Set
                Me.candidateIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property employmentType() As String
            Get
                Return Me.employmentTypeField
            End Get
            Set
                Me.employmentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property expirationDate() As System.Nullable(Of Date)
            Get
                Return Me.expirationDateField
            End Get
            Set
                Me.expirationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property manager() As String
            Get
                Return Me.managerField
            End Get
            Set
                Me.managerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property offerFileName() As String
            Get
                Return Me.offerFileNameField
            End Get
            Set
                Me.offerFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property payRate() As String
            Get
                Return Me.payRateField
            End Get
            Set
                Me.payRateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property requisitionId() As Long
            Get
                Return Me.requisitionIdField
            End Get
            Set
                Me.requisitionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property startDate() As System.Nullable(Of Date)
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property stockOptions() As String
            Get
                Return Me.stockOptionsField
            End Get
            Set
                Me.stockOptionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class InterviewBean
        Inherits EntityBean
        
        Private candidateIdField As Long
        
        Private commentsField As String
        
        Private creatorField As String
        
        Private interviewRoomField As String
        
        Private interviewTypeField As String
        
        Private participantsField() As ParticipantBean
        
        Private requisitionIdField As Long
        
        Private startDateField As System.Nullable(Of Date)
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property candidateId() As Long
            Get
                Return Me.candidateIdField
            End Get
            Set
                Me.candidateIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property interviewRoom() As String
            Get
                Return Me.interviewRoomField
            End Get
            Set
                Me.interviewRoomField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property interviewType() As String
            Get
                Return Me.interviewTypeField
            End Get
            Set
                Me.interviewTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property participants() As ParticipantBean()
            Get
                Return Me.participantsField
            End Get
            Set
                Me.participantsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property requisitionId() As Long
            Get
                Return Me.requisitionIdField
            End Get
            Set
                Me.requisitionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property startDate() As System.Nullable(Of Date)
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class ContactBean
        Inherits EntityBean
        
        Private accountIdField As Long
        
        Private addressField As String
        
        Private assistantEmailField As String
        
        Private assistantNameField As String
        
        Private assistantPhoneField As String
        
        Private cellPhoneField As String
        
        Private cityField As String
        
        Private contactTypeField As String
        
        Private countryField As String
        
        Private creatorField As String
        
        Private departmentField As String
        
        Private descriptionField As String
        
        Private emailField As String
        
        Private faxField As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private phoneField As String
        
        Private reportsToIdField As Long
        
        Private stateField As String
        
        Private titleField As String
        
        Private zipCodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property accountId() As Long
            Get
                Return Me.accountIdField
            End Get
            Set
                Me.accountIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property assistantEmail() As String
            Get
                Return Me.assistantEmailField
            End Get
            Set
                Me.assistantEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property assistantName() As String
            Get
                Return Me.assistantNameField
            End Get
            Set
                Me.assistantNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property assistantPhone() As String
            Get
                Return Me.assistantPhoneField
            End Get
            Set
                Me.assistantPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property cellPhone() As String
            Get
                Return Me.cellPhoneField
            End Get
            Set
                Me.cellPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property contactType() As String
            Get
                Return Me.contactTypeField
            End Get
            Set
                Me.contactTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property firstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property lastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property reportsToId() As Long
            Get
                Return Me.reportsToIdField
            End Get
            Set
                Me.reportsToIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property zipCode() As String
            Get
                Return Me.zipCodeField
            End Get
            Set
                Me.zipCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class CandidateBean
        Inherits EntityBean
        
        Private addressField As String
        
        Private cellPhoneField As String
        
        Private cityField As String
        
        Private countryField As String
        
        Private emailField As String
        
        Private firstNameField As String
        
        Private genderField As String
        
        Private hiredDateField As System.Nullable(Of Date)
        
        Private lastNameField As String
        
        Private legalStatusField As String
        
        Private middleInitialField As String
        
        Private passwordField As String
        
        Private phoneField As String
        
        Private raceField As String
        
        Private rankField As Integer
        
        Private reasonRejectedField As String
        
        Private referredByField As String
        
        Private resumeFileNameField As String
        
        Private sourceField As String
        
        Private startDateField As System.Nullable(Of Date)
        
        Private stateField As String
        
        Private submittedByField As String
        
        Private textResumeField As String
        
        Private veteranField As String
        
        Private zipCodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property cellPhone() As String
            Get
                Return Me.cellPhoneField
            End Get
            Set
                Me.cellPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property firstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property hiredDate() As System.Nullable(Of Date)
            Get
                Return Me.hiredDateField
            End Get
            Set
                Me.hiredDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property lastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property legalStatus() As String
            Get
                Return Me.legalStatusField
            End Get
            Set
                Me.legalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property middleInitial() As String
            Get
                Return Me.middleInitialField
            End Get
            Set
                Me.middleInitialField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property race() As String
            Get
                Return Me.raceField
            End Get
            Set
                Me.raceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property rank() As Integer
            Get
                Return Me.rankField
            End Get
            Set
                Me.rankField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property reasonRejected() As String
            Get
                Return Me.reasonRejectedField
            End Get
            Set
                Me.reasonRejectedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property referredBy() As String
            Get
                Return Me.referredByField
            End Get
            Set
                Me.referredByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property resumeFileName() As String
            Get
                Return Me.resumeFileNameField
            End Get
            Set
                Me.resumeFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property startDate() As System.Nullable(Of Date)
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property submittedBy() As String
            Get
                Return Me.submittedByField
            End Get
            Set
                Me.submittedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property textResume() As String
            Get
                Return Me.textResumeField
            End Get
            Set
                Me.textResumeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property veteran() As String
            Get
                Return Me.veteranField
            End Get
            Set
                Me.veteranField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property zipCode() As String
            Get
                Return Me.zipCodeField
            End Get
            Set
                Me.zipCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class BackgroundCheckBean
        Inherits EntityBean
        
        Private candidateIdField As Long
        
        Private checkerEmailField As String
        
        Private checkerNameField As String
        
        Private checkerPhoneField As String
        
        Private commentsField As String
        
        Private creatorField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property candidateId() As Long
            Get
                Return Me.candidateIdField
            End Get
            Set
                Me.candidateIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property checkerEmail() As String
            Get
                Return Me.checkerEmailField
            End Get
            Set
                Me.checkerEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property checkerName() As String
            Get
                Return Me.checkerNameField
            End Get
            Set
                Me.checkerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property checkerPhone() As String
            Get
                Return Me.checkerPhoneField
            End Get
            Set
                Me.checkerPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class AccountBean
        Inherits EntityBean
        
        Private addressField As String
        
        Private cityField As String
        
        Private countryField As String
        
        Private descriptionField As String
        
        Private faxField As String
        
        Private industryField As String
        
        Private nameField As String
        
        Private parentAccountIdField As Long
        
        Private phoneField As String
        
        Private stateField As String
        
        Private typeField As String
        
        Private webSiteField As String
        
        Private zipCodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property industry() As String
            Get
                Return Me.industryField
            End Get
            Set
                Me.industryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property parentAccountId() As Long
            Get
                Return Me.parentAccountIdField
            End Get
            Set
                Me.parentAccountIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property webSite() As String
            Get
                Return Me.webSiteField
            End Get
            Set
                Me.webSiteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property zipCode() As String
            Get
                Return Me.zipCodeField
            End Get
            Set
                Me.zipCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class CalendarEventBean
        Inherits EntityBean
        
        Private creatorField As String
        
        Private descriptionField As String
        
        Private durationField As Long
        
        Private entityIdField As Long
        
        Private entityTypeField As String
        
        Private isPrivateField As Boolean
        
        Private locationField As String
        
        Private participantsField() As ParticipantBean
        
        Private startDateField As System.Nullable(Of Date)
        
        Private subjectField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property duration() As Long
            Get
                Return Me.durationField
            End Get
            Set
                Me.durationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property entityId() As Long
            Get
                Return Me.entityIdField
            End Get
            Set
                Me.entityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property entityType() As String
            Get
                Return Me.entityTypeField
            End Get
            Set
                Me.entityTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property isPrivate() As Boolean
            Get
                Return Me.isPrivateField
            End Get
            Set
                Me.isPrivateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property participants() As ParticipantBean()
            Get
                Return Me.participantsField
            End Get
            Set
                Me.participantsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property startDate() As System.Nullable(Of Date)
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property subject() As String
            Get
                Return Me.subjectField
            End Get
            Set
                Me.subjectField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class ReferenceBean
        Inherits EntityBean
        
        Private candidateIdField As Long
        
        Private commentsField As String
        
        Private creatorField As String
        
        Private employerField As String
        
        Private refEmailField As String
        
        Private refNameField As String
        
        Private refPhoneField As String
        
        Private refTitleField As String
        
        Private relToCandidateField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property candidateId() As Long
            Get
                Return Me.candidateIdField
            End Get
            Set
                Me.candidateIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property employer() As String
            Get
                Return Me.employerField
            End Get
            Set
                Me.employerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property refEmail() As String
            Get
                Return Me.refEmailField
            End Get
            Set
                Me.refEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property refName() As String
            Get
                Return Me.refNameField
            End Get
            Set
                Me.refNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property refPhone() As String
            Get
                Return Me.refPhoneField
            End Get
            Set
                Me.refPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property refTitle() As String
            Get
                Return Me.refTitleField
            End Get
            Set
                Me.refTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property relToCandidate() As String
            Get
                Return Me.relToCandidateField
            End Get
            Set
                Me.relToCandidateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class WorkHistoryArr
        
        Private arrayField() As WorkHistoryBean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property array() As WorkHistoryBean()
            Get
                Return Me.arrayField
            End Get
            Set
                Me.arrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class CandidateDetailsBean
        
        Private offerBeansField() As OfferBean
        
        Private historyBeansField() As HistoryBean
        
        Private interviewBeansField() As InterviewBean
        
        Private referenceBeansField() As ReferenceBean
        
        Private attachmentBeansField() As AttachmentBean
        
        Private requisitionBeansField() As RequisitionBean
        
        Private candidateBeanField As CandidateBean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property offerBeans() As OfferBean()
            Get
                Return Me.offerBeansField
            End Get
            Set
                Me.offerBeansField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property historyBeans() As HistoryBean()
            Get
                Return Me.historyBeansField
            End Get
            Set
                Me.historyBeansField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property interviewBeans() As InterviewBean()
            Get
                Return Me.interviewBeansField
            End Get
            Set
                Me.interviewBeansField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property referenceBeans() As ReferenceBean()
            Get
                Return Me.referenceBeansField
            End Get
            Set
                Me.referenceBeansField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property attachmentBeans() As AttachmentBean()
            Get
                Return Me.attachmentBeansField
            End Get
            Set
                Me.attachmentBeansField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property requisitionBeans() As RequisitionBean()
            Get
                Return Me.requisitionBeansField
            End Get
            Set
                Me.requisitionBeansField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property candidateBean() As CandidateBean
            Get
                Return Me.candidateBeanField
            End Get
            Set
                Me.candidateBeanField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class HistoryBean
        
        Private creationDateField As System.Nullable(Of Date)
        
        Private emailTextField As String
        
        Private idField As Long
        
        Private textField As String
        
        Private userNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creationDate() As System.Nullable(Of Date)
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property emailText() As String
            Get
                Return Me.emailTextField
            End Get
            Set
                Me.emailTextField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property userName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class AttachmentBean
        
        Private contentTypeField As String
        
        Private creationDateField As System.Nullable(Of Date)
        
        Private descriptionField As String
        
        Private idField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property contentType() As String
            Get
                Return Me.contentTypeField
            End Get
            Set
                Me.contentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creationDate() As System.Nullable(Of Date)
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class LookupArr
        
        Private arrayField() As LookupBean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property array() As LookupBean()
            Get
                Return Me.arrayField
            End Get
            Set
                Me.arrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class LookupBean
        
        Private displayNameField As String
        
        Private integrationCodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property displayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property integrationCode() As String
            Get
                Return Me.integrationCodeField
            End Get
            Set
                Me.integrationCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class MetadataArr
        
        Private arrayField() As MetadataBean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property array() As MetadataBean()
            Get
                Return Me.arrayField
            End Get
            Set
                Me.arrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class MetadataBean
        
        Private displayNameField As String
        
        Private integrationNameField As String
        
        Private isCustomField As Boolean
        
        Private isReadOnlyField As Boolean
        
        Private isRequiredField As Boolean
        
        Private typeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property displayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property integrationName() As String
            Get
                Return Me.integrationNameField
            End Get
            Set
                Me.integrationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property isCustom() As Boolean
            Get
                Return Me.isCustomField
            End Get
            Set
                Me.isCustomField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property isReadOnly() As Boolean
            Get
                Return Me.isReadOnlyField
            End Get
            Set
                Me.isReadOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property isRequired() As Boolean
            Get
                Return Me.isRequiredField
            End Get
            Set
                Me.isRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class CandidateInsertResultBean
        
        Private candidateIdField As Long
        
        Private dupField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property candidateId() As Long
            Get
                Return Me.candidateIdField
            End Get
            Set
                Me.candidateIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property dup() As Long
            Get
                Return Me.dupField
            End Get
            Set
                Me.dupField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class ContactLogBean
        
        Private commentsField As String
        
        Private contactDateField As System.Nullable(Of Date)
        
        Private creationDateField As System.Nullable(Of Date)
        
        Private creatorField As String
        
        Private entityIdField As Long
        
        Private entityTypeField As String
        
        Private idField As Long
        
        Private lastUpdatedField As System.Nullable(Of Date)
        
        Private subjectField As String
        
        Private typeNoField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property contactDate() As System.Nullable(Of Date)
            Get
                Return Me.contactDateField
            End Get
            Set
                Me.contactDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creationDate() As System.Nullable(Of Date)
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property entityId() As Long
            Get
                Return Me.entityIdField
            End Get
            Set
                Me.entityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property entityType() As String
            Get
                Return Me.entityTypeField
            End Get
            Set
                Me.entityTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property lastUpdated() As System.Nullable(Of Date)
            Get
                Return Me.lastUpdatedField
            End Get
            Set
                Me.lastUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property subject() As String
            Get
                Return Me.subjectField
            End Get
            Set
                Me.subjectField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property typeNo() As Integer
            Get
                Return Me.typeNoField
            End Get
            Set
                Me.typeNoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class HistoryBeanArr
        
        Private arrayField() As HistoryBean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property array() As HistoryBean()
            Get
                Return Me.arrayField
            End Get
            Set
                Me.arrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class ByteArr
        
        Private arrayField() As Byte
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary", IsNullable:=true)>  _
        Public Property array() As Byte()
            Get
                Return Me.arrayField
            End Get
            Set
                Me.arrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class LongArr
        
        Private arrayField() As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property array() As Long()
            Get
                Return Me.arrayField
            End Get
            Set
                Me.arrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class SearchResultArr
        
        Private arrayField() As SearchResultBean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=false)>  _
        Public Property array() As SearchResultBean()
            Get
                Return Me.arrayField
            End Get
            Set
                Me.arrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class SearchResultBean
        
        Private idField As Long
        
        Private relevanceField As Double
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property relevance() As Double
            Get
                Return Me.relevanceField
            End Get
            Set
                Me.relevanceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:TBEWebAPI")>  _
    Partial Public Class WebServicesException
        
        Private messageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createTaskCompletedEventHandler(ByVal sender As Object, ByVal e As createTaskCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createTaskCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createReferenceCompletedEventHandler(ByVal sender As Object, ByVal e As createReferenceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createReferenceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createEventCompletedEventHandler(ByVal sender As Object, ByVal e As createEventCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createEventCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub loginCompletedEventHandler(ByVal sender As Object, ByVal e As loginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class loginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub logoutCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getEnabledServicesCompletedEventHandler(ByVal sender As Object, ByVal e As getEnabledServicesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEnabledServicesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getLoginTokenCompletedEventHandler(ByVal sender As Object, ByVal e As getLoginTokenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLoginTokenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub searchAccountCompletedEventHandler(ByVal sender As Object, ByVal e As searchAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SearchResultArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SearchResultArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAccountByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getAccountByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAccountByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AccountBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AccountBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createAccountCompletedEventHandler(ByVal sender As Object, ByVal e As createAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateAccountCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteAccountCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getBackgroundChecksByCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As getBackgroundChecksByCandidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBackgroundChecksByCandidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getBackgroundCheckByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getBackgroundCheckByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBackgroundCheckByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BackgroundCheckBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BackgroundCheckBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createBackgroundCheckCompletedEventHandler(ByVal sender As Object, ByVal e As createBackgroundCheckCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createBackgroundCheckCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateBackgroundCheckCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteBackgroundCheckCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getEventByEntityCompletedEventHandler(ByVal sender As Object, ByVal e As getEventByEntityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEventByEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getPublicEventsCompletedEventHandler(ByVal sender As Object, ByVal e As getPublicEventsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPublicEventsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getEventByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getEventByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEventByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CalendarEventBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CalendarEventBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateEventCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteEventCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub searchCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As searchCandidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchCandidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SearchResultArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SearchResultArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getCandidateByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getCandidateByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCandidateByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CandidateBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CandidateBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getRequisitionsCompletedEventHandler(ByVal sender As Object, ByVal e As getRequisitionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getRequisitionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getOffersCompletedEventHandler(ByVal sender As Object, ByVal e As getOffersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOffersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As createCandidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createCandidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub setBinaryResumeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getBinaryResumeCompletedEventHandler(ByVal sender As Object, ByVal e As getBinaryResumeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBinaryResumeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ByteArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ByteArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub submitCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub removeCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub searchContactCompletedEventHandler(ByVal sender As Object, ByVal e As searchContactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchContactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SearchResultArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SearchResultArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getContactByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getContactByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getContactByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createContactCompletedEventHandler(ByVal sender As Object, ByVal e As createContactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createContactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateContactCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteContactCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getCandidateHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As getCandidateHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCandidateHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As HistoryBeanArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),HistoryBeanArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getRequisitionHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As getRequisitionHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getRequisitionHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As HistoryBeanArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),HistoryBeanArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAccountHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As getAccountHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAccountHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As HistoryBeanArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),HistoryBeanArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getContactHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As getContactHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getContactHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As HistoryBeanArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),HistoryBeanArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getUserHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As getUserHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUserHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As HistoryBeanArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),HistoryBeanArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getInterviewsByCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As getInterviewsByCandidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getInterviewsByCandidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getInterviewByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getInterviewByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getInterviewByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InterviewBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InterviewBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createInterviewCompletedEventHandler(ByVal sender As Object, ByVal e As createInterviewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createInterviewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateInterviewCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteInterviewCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getOfferByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getOfferByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOfferByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OfferBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OfferBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createOfferCompletedEventHandler(ByVal sender As Object, ByVal e As createOfferCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createOfferCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateOfferCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub setBinaryOfferCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getBinaryOfferCompletedEventHandler(ByVal sender As Object, ByVal e As getBinaryOfferCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBinaryOfferCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ByteArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ByteArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteOfferCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getReferencesByCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As getReferencesByCandidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getReferencesByCandidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getReferenceByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getReferenceByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getReferenceByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReferenceBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReferenceBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateReferenceCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteReferenceCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub searchRequisitionCompletedEventHandler(ByVal sender As Object, ByVal e As searchRequisitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchRequisitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SearchResultArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SearchResultArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getRequisitionByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getRequisitionByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getRequisitionByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RequisitionBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RequisitionBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getCandidatesByRequisitionCompletedEventHandler(ByVal sender As Object, ByVal e As getCandidatesByRequisitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCandidatesByRequisitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAssociatedUsersCompletedEventHandler(ByVal sender As Object, ByVal e As getAssociatedUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAssociatedUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createRequisitionCompletedEventHandler(ByVal sender As Object, ByVal e As createRequisitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createRequisitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateRequisitionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub setAssociatedUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub removeAssociatedUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteRequisitionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getTaskByEntityCompletedEventHandler(ByVal sender As Object, ByVal e As getTaskByEntityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTaskByEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getTaskByUserCompletedEventHandler(ByVal sender As Object, ByVal e As getTaskByUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTaskByUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getTaskByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getTaskByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTaskByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaskBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaskBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateTaskCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteTaskCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub searchUserCompletedEventHandler(ByVal sender As Object, ByVal e As searchUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SearchResultArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SearchResultArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getUserByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getUserByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUserByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createUserCompletedEventHandler(ByVal sender As Object, ByVal e As createUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createUserWithPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As createUserWithPermissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createUserWithPermissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getContactLogsByEntityCompletedEventHandler(ByVal sender As Object, ByVal e As getContactLogsByEntityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getContactLogsByEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getContactLogByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getContactLogByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getContactLogByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactLogBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactLogBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createContactLogCompletedEventHandler(ByVal sender As Object, ByVal e As createContactLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createContactLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createEmailLogCompletedEventHandler(ByVal sender As Object, ByVal e As createEmailLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createEmailLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createEmailSentLogCompletedEventHandler(ByVal sender As Object, ByVal e As createEmailSentLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createEmailSentLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateContactLogCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteContactLogCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getSystemPropsCompletedEventHandler(ByVal sender As Object, ByVal e As getSystemPropsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSystemPropsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As mapItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),mapItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getCandReqStatusCompletedEventHandler(ByVal sender As Object, ByVal e As getCandReqStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCandReqStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub parseResumeCompletedEventHandler(ByVal sender As Object, ByVal e As parseResumeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class parseResumeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub parseResumeIntoCandidateCompletedEventHandler(ByVal sender As Object, ByVal e As parseResumeIntoCandidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class parseResumeIntoCandidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CandidateInsertResultBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CandidateInsertResultBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getMetadataCompletedEventHandler(ByVal sender As Object, ByVal e As getMetadataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMetadataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MetadataArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MetadataArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getLookupCompletedEventHandler(ByVal sender As Object, ByVal e As getLookupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLookupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LookupArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LookupArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createLinkCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub removeLinkCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As createAttachmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createAttachmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createEntityAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As createEntityAttachmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createEntityAttachmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAttachmentsCompletedEventHandler(ByVal sender As Object, ByVal e As getAttachmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAttachmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getEntityAttachmentsCompletedEventHandler(ByVal sender As Object, ByVal e As getEntityAttachmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEntityAttachmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LongArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LongArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As getAttachmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAttachmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AttachmentBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AttachmentBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAttachmentDataCompletedEventHandler(ByVal sender As Object, ByVal e As getAttachmentDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAttachmentDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ByteArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ByteArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getCandidateDetailsByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getCandidateDetailsByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCandidateDetailsByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CandidateDetailsBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CandidateDetailsBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createRequisitionTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As createRequisitionTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createRequisitionTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub postRequisitionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub unpostRequisitionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub upsertCandidateToRequisitionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub searchEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As searchEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SearchResultArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SearchResultArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteEmployeeByNumberCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub upsertEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As upsertEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class upsertEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getEmployeeByNumberCompletedEventHandler(ByVal sender As Object, ByVal e As getEmployeeByNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEmployeeByNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getEmployeeByIdCompletedEventHandler(ByVal sender As Object, ByVal e As getEmployeeByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEmployeeByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeBean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As createEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class createEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub updateEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getCandidateWorkHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As getCandidateWorkHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCandidateWorkHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkHistoryArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkHistoryArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getRollingEntitiesCompletedEventHandler(ByVal sender As Object, ByVal e As getRollingEntitiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getRollingEntitiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FlexRollingEntityBeanArr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FlexRollingEntityBeanArr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub upsertRollingEntityCompletedEventHandler(ByVal sender As Object, ByVal e As upsertRollingEntityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class upsertRollingEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub deleteRollingEntityCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
